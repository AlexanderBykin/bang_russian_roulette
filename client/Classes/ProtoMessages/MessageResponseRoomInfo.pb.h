// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageResponseRoomInfo.proto

#ifndef PROTOBUF_MessageResponseRoomInfo_2eproto__INCLUDED
#define PROTOBUF_MessageResponseRoomInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "RoomShootDirection.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MessageResponseRoomInfo_2eproto();
void protobuf_AssignDesc_MessageResponseRoomInfo_2eproto();
void protobuf_ShutdownFile_MessageResponseRoomInfo_2eproto();

class MessageResponseRoomInfo;

// ===================================================================

class MessageResponseRoomInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:MessageResponseRoomInfo) */ {
 public:
  MessageResponseRoomInfo();
  virtual ~MessageResponseRoomInfo();

  MessageResponseRoomInfo(const MessageResponseRoomInfo& from);

  inline MessageResponseRoomInfo& operator=(const MessageResponseRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const MessageResponseRoomInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MessageResponseRoomInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MessageResponseRoomInfo* other);

  // implements Message ----------------------------------------------

  inline MessageResponseRoomInfo* New() const { return New(NULL); }

  MessageResponseRoomInfo* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MessageResponseRoomInfo& from);
  void MergeFrom(const MessageResponseRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageResponseRoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 roomId = 1 [default = 0];
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int64 roomid() const;
  void set_roomid(::google::protobuf::int64 value);

  // required int32 bet = 2 [default = 0];
  bool has_bet() const;
  void clear_bet();
  static const int kBetFieldNumber = 2;
  ::google::protobuf::int32 bet() const;
  void set_bet(::google::protobuf::int32 value);

  // required int32 amountPlayers = 4 [default = 0];
  bool has_amountplayers() const;
  void clear_amountplayers();
  static const int kAmountPlayersFieldNumber = 4;
  ::google::protobuf::int32 amountplayers() const;
  void set_amountplayers(::google::protobuf::int32 value);

  // required int32 maxPlayers = 5 [default = 0];
  bool has_maxplayers() const;
  void clear_maxplayers();
  static const int kMaxPlayersFieldNumber = 5;
  ::google::protobuf::int32 maxplayers() const;
  void set_maxplayers(::google::protobuf::int32 value);

  // required int32 currentRound = 6 [default = 0];
  bool has_currentround() const;
  void clear_currentround();
  static const int kCurrentRoundFieldNumber = 6;
  ::google::protobuf::int32 currentround() const;
  void set_currentround(::google::protobuf::int32 value);

  // required int32 maxRounds = 7 [default = 0];
  bool has_maxrounds() const;
  void clear_maxrounds();
  static const int kMaxRoundsFieldNumber = 7;
  ::google::protobuf::int32 maxrounds() const;
  void set_maxrounds(::google::protobuf::int32 value);

  // required int64 playerbank = 8 [default = 0];
  bool has_playerbank() const;
  void clear_playerbank();
  static const int kPlayerbankFieldNumber = 8;
  ::google::protobuf::int64 playerbank() const;
  void set_playerbank(::google::protobuf::int64 value);

  // required int64 investorbank = 9 [default = 0];
  bool has_investorbank() const;
  void clear_investorbank();
  static const int kInvestorbankFieldNumber = 9;
  ::google::protobuf::int64 investorbank() const;
  void set_investorbank(::google::protobuf::int64 value);

  // required bool isGameStarted = 10 [default = false];
  bool has_isgamestarted() const;
  void clear_isgamestarted();
  static const int kIsGameStartedFieldNumber = 10;
  bool isgamestarted() const;
  void set_isgamestarted(bool value);

  // required .RoomShootDirection shootDirection = 11 [default = rsdLEFT];
  bool has_shootdirection() const;
  void clear_shootdirection();
  static const int kShootDirectionFieldNumber = 11;
  ::RoomShootDirection shootdirection() const;
  void set_shootdirection(::RoomShootDirection value);

  // @@protoc_insertion_point(class_scope:MessageResponseRoomInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_bet();
  inline void clear_has_bet();
  inline void set_has_amountplayers();
  inline void clear_has_amountplayers();
  inline void set_has_maxplayers();
  inline void clear_has_maxplayers();
  inline void set_has_currentround();
  inline void clear_has_currentround();
  inline void set_has_maxrounds();
  inline void clear_has_maxrounds();
  inline void set_has_playerbank();
  inline void clear_has_playerbank();
  inline void set_has_investorbank();
  inline void clear_has_investorbank();
  inline void set_has_isgamestarted();
  inline void clear_has_isgamestarted();
  inline void set_has_shootdirection();
  inline void clear_has_shootdirection();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 roomid_;
  ::google::protobuf::int32 bet_;
  ::google::protobuf::int32 amountplayers_;
  ::google::protobuf::int32 maxplayers_;
  ::google::protobuf::int32 currentround_;
  ::google::protobuf::int64 playerbank_;
  ::google::protobuf::int32 maxrounds_;
  bool isgamestarted_;
  ::google::protobuf::int64 investorbank_;
  int shootdirection_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageResponseRoomInfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageResponseRoomInfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageResponseRoomInfo_2eproto();
  friend void protobuf_ShutdownFile_MessageResponseRoomInfo_2eproto();

  void InitAsDefaultInstance();
  static MessageResponseRoomInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageResponseRoomInfo

// required int64 roomId = 1 [default = 0];
inline bool MessageResponseRoomInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageResponseRoomInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageResponseRoomInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageResponseRoomInfo::clear_roomid() {
  roomid_ = GOOGLE_LONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::int64 MessageResponseRoomInfo::roomid() const {
  // @@protoc_insertion_point(field_get:MessageResponseRoomInfo.roomId)
  return roomid_;
}
inline void MessageResponseRoomInfo::set_roomid(::google::protobuf::int64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseRoomInfo.roomId)
}

// required int32 bet = 2 [default = 0];
inline bool MessageResponseRoomInfo::has_bet() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageResponseRoomInfo::set_has_bet() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageResponseRoomInfo::clear_has_bet() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageResponseRoomInfo::clear_bet() {
  bet_ = 0;
  clear_has_bet();
}
inline ::google::protobuf::int32 MessageResponseRoomInfo::bet() const {
  // @@protoc_insertion_point(field_get:MessageResponseRoomInfo.bet)
  return bet_;
}
inline void MessageResponseRoomInfo::set_bet(::google::protobuf::int32 value) {
  set_has_bet();
  bet_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseRoomInfo.bet)
}

// required int32 amountPlayers = 4 [default = 0];
inline bool MessageResponseRoomInfo::has_amountplayers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageResponseRoomInfo::set_has_amountplayers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageResponseRoomInfo::clear_has_amountplayers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageResponseRoomInfo::clear_amountplayers() {
  amountplayers_ = 0;
  clear_has_amountplayers();
}
inline ::google::protobuf::int32 MessageResponseRoomInfo::amountplayers() const {
  // @@protoc_insertion_point(field_get:MessageResponseRoomInfo.amountPlayers)
  return amountplayers_;
}
inline void MessageResponseRoomInfo::set_amountplayers(::google::protobuf::int32 value) {
  set_has_amountplayers();
  amountplayers_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseRoomInfo.amountPlayers)
}

// required int32 maxPlayers = 5 [default = 0];
inline bool MessageResponseRoomInfo::has_maxplayers() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageResponseRoomInfo::set_has_maxplayers() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageResponseRoomInfo::clear_has_maxplayers() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageResponseRoomInfo::clear_maxplayers() {
  maxplayers_ = 0;
  clear_has_maxplayers();
}
inline ::google::protobuf::int32 MessageResponseRoomInfo::maxplayers() const {
  // @@protoc_insertion_point(field_get:MessageResponseRoomInfo.maxPlayers)
  return maxplayers_;
}
inline void MessageResponseRoomInfo::set_maxplayers(::google::protobuf::int32 value) {
  set_has_maxplayers();
  maxplayers_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseRoomInfo.maxPlayers)
}

// required int32 currentRound = 6 [default = 0];
inline bool MessageResponseRoomInfo::has_currentround() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MessageResponseRoomInfo::set_has_currentround() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MessageResponseRoomInfo::clear_has_currentround() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MessageResponseRoomInfo::clear_currentround() {
  currentround_ = 0;
  clear_has_currentround();
}
inline ::google::protobuf::int32 MessageResponseRoomInfo::currentround() const {
  // @@protoc_insertion_point(field_get:MessageResponseRoomInfo.currentRound)
  return currentround_;
}
inline void MessageResponseRoomInfo::set_currentround(::google::protobuf::int32 value) {
  set_has_currentround();
  currentround_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseRoomInfo.currentRound)
}

// required int32 maxRounds = 7 [default = 0];
inline bool MessageResponseRoomInfo::has_maxrounds() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MessageResponseRoomInfo::set_has_maxrounds() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MessageResponseRoomInfo::clear_has_maxrounds() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MessageResponseRoomInfo::clear_maxrounds() {
  maxrounds_ = 0;
  clear_has_maxrounds();
}
inline ::google::protobuf::int32 MessageResponseRoomInfo::maxrounds() const {
  // @@protoc_insertion_point(field_get:MessageResponseRoomInfo.maxRounds)
  return maxrounds_;
}
inline void MessageResponseRoomInfo::set_maxrounds(::google::protobuf::int32 value) {
  set_has_maxrounds();
  maxrounds_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseRoomInfo.maxRounds)
}

// required int64 playerbank = 8 [default = 0];
inline bool MessageResponseRoomInfo::has_playerbank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MessageResponseRoomInfo::set_has_playerbank() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MessageResponseRoomInfo::clear_has_playerbank() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MessageResponseRoomInfo::clear_playerbank() {
  playerbank_ = GOOGLE_LONGLONG(0);
  clear_has_playerbank();
}
inline ::google::protobuf::int64 MessageResponseRoomInfo::playerbank() const {
  // @@protoc_insertion_point(field_get:MessageResponseRoomInfo.playerbank)
  return playerbank_;
}
inline void MessageResponseRoomInfo::set_playerbank(::google::protobuf::int64 value) {
  set_has_playerbank();
  playerbank_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseRoomInfo.playerbank)
}

// required int64 investorbank = 9 [default = 0];
inline bool MessageResponseRoomInfo::has_investorbank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MessageResponseRoomInfo::set_has_investorbank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MessageResponseRoomInfo::clear_has_investorbank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MessageResponseRoomInfo::clear_investorbank() {
  investorbank_ = GOOGLE_LONGLONG(0);
  clear_has_investorbank();
}
inline ::google::protobuf::int64 MessageResponseRoomInfo::investorbank() const {
  // @@protoc_insertion_point(field_get:MessageResponseRoomInfo.investorbank)
  return investorbank_;
}
inline void MessageResponseRoomInfo::set_investorbank(::google::protobuf::int64 value) {
  set_has_investorbank();
  investorbank_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseRoomInfo.investorbank)
}

// required bool isGameStarted = 10 [default = false];
inline bool MessageResponseRoomInfo::has_isgamestarted() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MessageResponseRoomInfo::set_has_isgamestarted() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MessageResponseRoomInfo::clear_has_isgamestarted() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MessageResponseRoomInfo::clear_isgamestarted() {
  isgamestarted_ = false;
  clear_has_isgamestarted();
}
inline bool MessageResponseRoomInfo::isgamestarted() const {
  // @@protoc_insertion_point(field_get:MessageResponseRoomInfo.isGameStarted)
  return isgamestarted_;
}
inline void MessageResponseRoomInfo::set_isgamestarted(bool value) {
  set_has_isgamestarted();
  isgamestarted_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseRoomInfo.isGameStarted)
}

// required .RoomShootDirection shootDirection = 11 [default = rsdLEFT];
inline bool MessageResponseRoomInfo::has_shootdirection() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MessageResponseRoomInfo::set_has_shootdirection() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MessageResponseRoomInfo::clear_has_shootdirection() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MessageResponseRoomInfo::clear_shootdirection() {
  shootdirection_ = 0;
  clear_has_shootdirection();
}
inline ::RoomShootDirection MessageResponseRoomInfo::shootdirection() const {
  // @@protoc_insertion_point(field_get:MessageResponseRoomInfo.shootDirection)
  return static_cast< ::RoomShootDirection >(shootdirection_);
}
inline void MessageResponseRoomInfo::set_shootdirection(::RoomShootDirection value) {
  assert(::RoomShootDirection_IsValid(value));
  set_has_shootdirection();
  shootdirection_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseRoomInfo.shootDirection)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageResponseRoomInfo_2eproto__INCLUDED
