// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageResponseRoomPlayerBang.proto

#ifndef PROTOBUF_MessageResponseRoomPlayerBang_2eproto__INCLUDED
#define PROTOBUF_MessageResponseRoomPlayerBang_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "MessageResponseRoundPlayerBang.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MessageResponseRoomPlayerBang_2eproto();
void protobuf_AssignDesc_MessageResponseRoomPlayerBang_2eproto();
void protobuf_ShutdownFile_MessageResponseRoomPlayerBang_2eproto();

class MessageResponseRoomPlayerBang;

// ===================================================================

class MessageResponseRoomPlayerBang : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:MessageResponseRoomPlayerBang) */ {
 public:
  MessageResponseRoomPlayerBang();
  virtual ~MessageResponseRoomPlayerBang();

  MessageResponseRoomPlayerBang(const MessageResponseRoomPlayerBang& from);

  inline MessageResponseRoomPlayerBang& operator=(const MessageResponseRoomPlayerBang& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const MessageResponseRoomPlayerBang& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MessageResponseRoomPlayerBang* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MessageResponseRoomPlayerBang* other);

  // implements Message ----------------------------------------------

  inline MessageResponseRoomPlayerBang* New() const { return New(NULL); }

  MessageResponseRoomPlayerBang* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MessageResponseRoomPlayerBang& from);
  void MergeFrom(const MessageResponseRoomPlayerBang& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageResponseRoomPlayerBang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 roomId = 1 [default = 0];
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int64 roomid() const;
  void set_roomid(::google::protobuf::int64 value);

  // required .MessageResponseRoundPlayerBang result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  const ::MessageResponseRoundPlayerBang& result() const;
  ::MessageResponseRoundPlayerBang* mutable_result();
  ::MessageResponseRoundPlayerBang* release_result();
  void set_allocated_result(::MessageResponseRoundPlayerBang* result);

  // @@protoc_insertion_point(class_scope:MessageResponseRoomPlayerBang)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_result();
  inline void clear_has_result();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 roomid_;
  ::MessageResponseRoundPlayerBang* result_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageResponseRoomPlayerBang_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageResponseRoomPlayerBang_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageResponseRoomPlayerBang_2eproto();
  friend void protobuf_ShutdownFile_MessageResponseRoomPlayerBang_2eproto();

  void InitAsDefaultInstance();
  static MessageResponseRoomPlayerBang* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageResponseRoomPlayerBang

// required int64 roomId = 1 [default = 0];
inline bool MessageResponseRoomPlayerBang::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageResponseRoomPlayerBang::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageResponseRoomPlayerBang::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageResponseRoomPlayerBang::clear_roomid() {
  roomid_ = GOOGLE_LONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::int64 MessageResponseRoomPlayerBang::roomid() const {
  // @@protoc_insertion_point(field_get:MessageResponseRoomPlayerBang.roomId)
  return roomid_;
}
inline void MessageResponseRoomPlayerBang::set_roomid(::google::protobuf::int64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseRoomPlayerBang.roomId)
}

// required .MessageResponseRoundPlayerBang result = 2;
inline bool MessageResponseRoomPlayerBang::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageResponseRoomPlayerBang::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageResponseRoomPlayerBang::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageResponseRoomPlayerBang::clear_result() {
  if (result_ != NULL) result_->::MessageResponseRoundPlayerBang::Clear();
  clear_has_result();
}
inline const ::MessageResponseRoundPlayerBang& MessageResponseRoomPlayerBang::result() const {
  // @@protoc_insertion_point(field_get:MessageResponseRoomPlayerBang.result)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return result_ != NULL ? *result_ : *default_instance().result_;
#else
  return result_ != NULL ? *result_ : *default_instance_->result_;
#endif
}
inline ::MessageResponseRoundPlayerBang* MessageResponseRoomPlayerBang::mutable_result() {
  set_has_result();
  if (result_ == NULL) {
    result_ = new ::MessageResponseRoundPlayerBang;
  }
  // @@protoc_insertion_point(field_mutable:MessageResponseRoomPlayerBang.result)
  return result_;
}
inline ::MessageResponseRoundPlayerBang* MessageResponseRoomPlayerBang::release_result() {
  // @@protoc_insertion_point(field_release:MessageResponseRoomPlayerBang.result)
  clear_has_result();
  ::MessageResponseRoundPlayerBang* temp = result_;
  result_ = NULL;
  return temp;
}
inline void MessageResponseRoomPlayerBang::set_allocated_result(::MessageResponseRoundPlayerBang* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:MessageResponseRoomPlayerBang.result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageResponseRoomPlayerBang_2eproto__INCLUDED
