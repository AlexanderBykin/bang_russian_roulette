// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageResponsePlayerInfo.proto

#ifndef PROTOBUF_MessageResponsePlayerInfo_2eproto__INCLUDED
#define PROTOBUF_MessageResponsePlayerInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MessageResponsePlayerInfo_2eproto();
void protobuf_AssignDesc_MessageResponsePlayerInfo_2eproto();
void protobuf_ShutdownFile_MessageResponsePlayerInfo_2eproto();

class MessageResponsePlayerInfo;

// ===================================================================

class MessageResponsePlayerInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:MessageResponsePlayerInfo) */ {
 public:
  MessageResponsePlayerInfo();
  virtual ~MessageResponsePlayerInfo();

  MessageResponsePlayerInfo(const MessageResponsePlayerInfo& from);

  inline MessageResponsePlayerInfo& operator=(const MessageResponsePlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const MessageResponsePlayerInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MessageResponsePlayerInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MessageResponsePlayerInfo* other);

  // implements Message ----------------------------------------------

  inline MessageResponsePlayerInfo* New() const { return New(NULL); }

  MessageResponsePlayerInfo* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MessageResponsePlayerInfo& from);
  void MergeFrom(const MessageResponsePlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageResponsePlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 playerId = 1 [default = 0];
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int64 playerid() const;
  void set_playerid(::google::protobuf::int64 value);

  // required string playerName = 2 [default = ""];
  bool has_playername() const;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // required int32 playerWins = 3 [default = 0];
  bool has_playerwins() const;
  void clear_playerwins();
  static const int kPlayerWinsFieldNumber = 3;
  ::google::protobuf::int32 playerwins() const;
  void set_playerwins(::google::protobuf::int32 value);

  // required int32 playerLoses = 4 [default = 0];
  bool has_playerloses() const;
  void clear_playerloses();
  static const int kPlayerLosesFieldNumber = 4;
  ::google::protobuf::int32 playerloses() const;
  void set_playerloses(::google::protobuf::int32 value);

  // required int32 ratingPosition = 5 [default = 0];
  bool has_ratingposition() const;
  void clear_ratingposition();
  static const int kRatingPositionFieldNumber = 5;
  ::google::protobuf::int32 ratingposition() const;
  void set_ratingposition(::google::protobuf::int32 value);

  // required bytes playerAvatar = 6 [default = "\000"];
  bool has_playeravatar() const;
  void clear_playeravatar();
  static const int kPlayerAvatarFieldNumber = 6;
  const ::std::string& playeravatar() const;
  void set_playeravatar(const ::std::string& value);
  void set_playeravatar(const char* value);
  void set_playeravatar(const void* value, size_t size);
  ::std::string* mutable_playeravatar();
  ::std::string* release_playeravatar();
  void set_allocated_playeravatar(::std::string* playeravatar);

  // @@protoc_insertion_point(class_scope:MessageResponsePlayerInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_playerwins();
  inline void clear_has_playerwins();
  inline void set_has_playerloses();
  inline void clear_has_playerloses();
  inline void set_has_ratingposition();
  inline void clear_has_ratingposition();
  inline void set_has_playeravatar();
  inline void clear_has_playeravatar();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 playerid_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::int32 playerwins_;
  ::google::protobuf::int32 playerloses_;
  static ::std::string* _default_playeravatar_;
  ::google::protobuf::internal::ArenaStringPtr playeravatar_;
  ::google::protobuf::int32 ratingposition_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageResponsePlayerInfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageResponsePlayerInfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageResponsePlayerInfo_2eproto();
  friend void protobuf_ShutdownFile_MessageResponsePlayerInfo_2eproto();

  void InitAsDefaultInstance();
  static MessageResponsePlayerInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageResponsePlayerInfo

// required int64 playerId = 1 [default = 0];
inline bool MessageResponsePlayerInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageResponsePlayerInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageResponsePlayerInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageResponsePlayerInfo::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 MessageResponsePlayerInfo::playerid() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerInfo.playerId)
  return playerid_;
}
inline void MessageResponsePlayerInfo::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:MessageResponsePlayerInfo.playerId)
}

// required string playerName = 2 [default = ""];
inline bool MessageResponsePlayerInfo::has_playername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageResponsePlayerInfo::set_has_playername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageResponsePlayerInfo::clear_has_playername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageResponsePlayerInfo::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playername();
}
inline const ::std::string& MessageResponsePlayerInfo::playername() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerInfo.playerName)
  return playername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageResponsePlayerInfo::set_playername(const ::std::string& value) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageResponsePlayerInfo.playerName)
}
inline void MessageResponsePlayerInfo::set_playername(const char* value) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageResponsePlayerInfo.playerName)
}
inline void MessageResponsePlayerInfo::set_playername(const char* value, size_t size) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageResponsePlayerInfo.playerName)
}
inline ::std::string* MessageResponsePlayerInfo::mutable_playername() {
  set_has_playername();
  // @@protoc_insertion_point(field_mutable:MessageResponsePlayerInfo.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageResponsePlayerInfo::release_playername() {
  // @@protoc_insertion_point(field_release:MessageResponsePlayerInfo.playerName)
  clear_has_playername();
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageResponsePlayerInfo::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    set_has_playername();
  } else {
    clear_has_playername();
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:MessageResponsePlayerInfo.playerName)
}

// required int32 playerWins = 3 [default = 0];
inline bool MessageResponsePlayerInfo::has_playerwins() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageResponsePlayerInfo::set_has_playerwins() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageResponsePlayerInfo::clear_has_playerwins() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageResponsePlayerInfo::clear_playerwins() {
  playerwins_ = 0;
  clear_has_playerwins();
}
inline ::google::protobuf::int32 MessageResponsePlayerInfo::playerwins() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerInfo.playerWins)
  return playerwins_;
}
inline void MessageResponsePlayerInfo::set_playerwins(::google::protobuf::int32 value) {
  set_has_playerwins();
  playerwins_ = value;
  // @@protoc_insertion_point(field_set:MessageResponsePlayerInfo.playerWins)
}

// required int32 playerLoses = 4 [default = 0];
inline bool MessageResponsePlayerInfo::has_playerloses() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageResponsePlayerInfo::set_has_playerloses() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageResponsePlayerInfo::clear_has_playerloses() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageResponsePlayerInfo::clear_playerloses() {
  playerloses_ = 0;
  clear_has_playerloses();
}
inline ::google::protobuf::int32 MessageResponsePlayerInfo::playerloses() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerInfo.playerLoses)
  return playerloses_;
}
inline void MessageResponsePlayerInfo::set_playerloses(::google::protobuf::int32 value) {
  set_has_playerloses();
  playerloses_ = value;
  // @@protoc_insertion_point(field_set:MessageResponsePlayerInfo.playerLoses)
}

// required int32 ratingPosition = 5 [default = 0];
inline bool MessageResponsePlayerInfo::has_ratingposition() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MessageResponsePlayerInfo::set_has_ratingposition() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MessageResponsePlayerInfo::clear_has_ratingposition() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MessageResponsePlayerInfo::clear_ratingposition() {
  ratingposition_ = 0;
  clear_has_ratingposition();
}
inline ::google::protobuf::int32 MessageResponsePlayerInfo::ratingposition() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerInfo.ratingPosition)
  return ratingposition_;
}
inline void MessageResponsePlayerInfo::set_ratingposition(::google::protobuf::int32 value) {
  set_has_ratingposition();
  ratingposition_ = value;
  // @@protoc_insertion_point(field_set:MessageResponsePlayerInfo.ratingPosition)
}

// required bytes playerAvatar = 6 [default = "\000"];
inline bool MessageResponsePlayerInfo::has_playeravatar() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MessageResponsePlayerInfo::set_has_playeravatar() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MessageResponsePlayerInfo::clear_has_playeravatar() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MessageResponsePlayerInfo::clear_playeravatar() {
  playeravatar_.ClearToDefaultNoArena(_default_playeravatar_);
  clear_has_playeravatar();
}
inline const ::std::string& MessageResponsePlayerInfo::playeravatar() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerInfo.playerAvatar)
  return playeravatar_.GetNoArena(_default_playeravatar_);
}
inline void MessageResponsePlayerInfo::set_playeravatar(const ::std::string& value) {
  set_has_playeravatar();
  playeravatar_.SetNoArena(_default_playeravatar_, value);
  // @@protoc_insertion_point(field_set:MessageResponsePlayerInfo.playerAvatar)
}
inline void MessageResponsePlayerInfo::set_playeravatar(const char* value) {
  set_has_playeravatar();
  playeravatar_.SetNoArena(_default_playeravatar_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageResponsePlayerInfo.playerAvatar)
}
inline void MessageResponsePlayerInfo::set_playeravatar(const void* value, size_t size) {
  set_has_playeravatar();
  playeravatar_.SetNoArena(_default_playeravatar_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageResponsePlayerInfo.playerAvatar)
}
inline ::std::string* MessageResponsePlayerInfo::mutable_playeravatar() {
  set_has_playeravatar();
  // @@protoc_insertion_point(field_mutable:MessageResponsePlayerInfo.playerAvatar)
  return playeravatar_.MutableNoArena(_default_playeravatar_);
}
inline ::std::string* MessageResponsePlayerInfo::release_playeravatar() {
  // @@protoc_insertion_point(field_release:MessageResponsePlayerInfo.playerAvatar)
  clear_has_playeravatar();
  return playeravatar_.ReleaseNoArena(_default_playeravatar_);
}
inline void MessageResponsePlayerInfo::set_allocated_playeravatar(::std::string* playeravatar) {
  if (playeravatar != NULL) {
    set_has_playeravatar();
  } else {
    clear_has_playeravatar();
  }
  playeravatar_.SetAllocatedNoArena(_default_playeravatar_, playeravatar);
  // @@protoc_insertion_point(field_set_allocated:MessageResponsePlayerInfo.playerAvatar)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageResponsePlayerInfo_2eproto__INCLUDED
