// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageRequestRoomList.proto

#ifndef PROTOBUF_MessageRequestRoomList_2eproto__INCLUDED
#define PROTOBUF_MessageRequestRoomList_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MessageRequestRoomList_2eproto();
void protobuf_AssignDesc_MessageRequestRoomList_2eproto();
void protobuf_ShutdownFile_MessageRequestRoomList_2eproto();

class MessageRequestRoomList;

enum MessageRequestRoomList_eBetType {
  MessageRequestRoomList_eBetType_btTINY = 0,
  MessageRequestRoomList_eBetType_btSMALL = 1,
  MessageRequestRoomList_eBetType_btMEDIUM = 2,
  MessageRequestRoomList_eBetType_btBIG = 3
};
bool MessageRequestRoomList_eBetType_IsValid(int value);
const MessageRequestRoomList_eBetType MessageRequestRoomList_eBetType_eBetType_MIN = MessageRequestRoomList_eBetType_btTINY;
const MessageRequestRoomList_eBetType MessageRequestRoomList_eBetType_eBetType_MAX = MessageRequestRoomList_eBetType_btBIG;
const int MessageRequestRoomList_eBetType_eBetType_ARRAYSIZE = MessageRequestRoomList_eBetType_eBetType_MAX + 1;

// ===================================================================

class MessageRequestRoomList : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:MessageRequestRoomList) */ {
 public:
  MessageRequestRoomList();
  virtual ~MessageRequestRoomList();

  MessageRequestRoomList(const MessageRequestRoomList& from);

  inline MessageRequestRoomList& operator=(const MessageRequestRoomList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const MessageRequestRoomList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MessageRequestRoomList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MessageRequestRoomList* other);

  // implements Message ----------------------------------------------

  inline MessageRequestRoomList* New() const { return New(NULL); }

  MessageRequestRoomList* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MessageRequestRoomList& from);
  void MergeFrom(const MessageRequestRoomList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageRequestRoomList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef MessageRequestRoomList_eBetType eBetType;
  static const eBetType btTINY =
    MessageRequestRoomList_eBetType_btTINY;
  static const eBetType btSMALL =
    MessageRequestRoomList_eBetType_btSMALL;
  static const eBetType btMEDIUM =
    MessageRequestRoomList_eBetType_btMEDIUM;
  static const eBetType btBIG =
    MessageRequestRoomList_eBetType_btBIG;
  static inline bool eBetType_IsValid(int value) {
    return MessageRequestRoomList_eBetType_IsValid(value);
  }
  static const eBetType eBetType_MIN =
    MessageRequestRoomList_eBetType_eBetType_MIN;
  static const eBetType eBetType_MAX =
    MessageRequestRoomList_eBetType_eBetType_MAX;
  static const int eBetType_ARRAYSIZE =
    MessageRequestRoomList_eBetType_eBetType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required .MessageRequestRoomList.eBetType betType = 2 [default = btTINY];
  bool has_bettype() const;
  void clear_bettype();
  static const int kBetTypeFieldNumber = 2;
  ::MessageRequestRoomList_eBetType bettype() const;
  void set_bettype(::MessageRequestRoomList_eBetType value);

  // @@protoc_insertion_point(class_scope:MessageRequestRoomList)
 private:
  inline void set_has_bettype();
  inline void clear_has_bettype();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int bettype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageRequestRoomList_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageRequestRoomList_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageRequestRoomList_2eproto();
  friend void protobuf_ShutdownFile_MessageRequestRoomList_2eproto();

  void InitAsDefaultInstance();
  static MessageRequestRoomList* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestRoomList

// required .MessageRequestRoomList.eBetType betType = 2 [default = btTINY];
inline bool MessageRequestRoomList::has_bettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageRequestRoomList::set_has_bettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageRequestRoomList::clear_has_bettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageRequestRoomList::clear_bettype() {
  bettype_ = 0;
  clear_has_bettype();
}
inline ::MessageRequestRoomList_eBetType MessageRequestRoomList::bettype() const {
  // @@protoc_insertion_point(field_get:MessageRequestRoomList.betType)
  return static_cast< ::MessageRequestRoomList_eBetType >(bettype_);
}
inline void MessageRequestRoomList::set_bettype(::MessageRequestRoomList_eBetType value) {
  assert(::MessageRequestRoomList_eBetType_IsValid(value));
  set_has_bettype();
  bettype_ = value;
  // @@protoc_insertion_point(field_set:MessageRequestRoomList.betType)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MessageRequestRoomList_eBetType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageRequestRoomList_2eproto__INCLUDED
