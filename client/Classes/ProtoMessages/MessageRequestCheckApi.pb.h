// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageRequestCheckApi.proto

#ifndef PROTOBUF_MessageRequestCheckApi_2eproto__INCLUDED
#define PROTOBUF_MessageRequestCheckApi_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MessageRequestCheckApi_2eproto();
void protobuf_AssignDesc_MessageRequestCheckApi_2eproto();
void protobuf_ShutdownFile_MessageRequestCheckApi_2eproto();

class MessageRequestCheckApi;

// ===================================================================

class MessageRequestCheckApi : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:MessageRequestCheckApi) */ {
 public:
  MessageRequestCheckApi();
  virtual ~MessageRequestCheckApi();

  MessageRequestCheckApi(const MessageRequestCheckApi& from);

  inline MessageRequestCheckApi& operator=(const MessageRequestCheckApi& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const MessageRequestCheckApi& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MessageRequestCheckApi* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MessageRequestCheckApi* other);

  // implements Message ----------------------------------------------

  inline MessageRequestCheckApi* New() const { return New(NULL); }

  MessageRequestCheckApi* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MessageRequestCheckApi& from);
  void MergeFrom(const MessageRequestCheckApi& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageRequestCheckApi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string version = 1 [default = ""];
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // @@protoc_insertion_point(class_scope:MessageRequestCheckApi)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageRequestCheckApi_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageRequestCheckApi_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageRequestCheckApi_2eproto();
  friend void protobuf_ShutdownFile_MessageRequestCheckApi_2eproto();

  void InitAsDefaultInstance();
  static MessageRequestCheckApi* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestCheckApi

// required string version = 1 [default = ""];
inline bool MessageRequestCheckApi::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageRequestCheckApi::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageRequestCheckApi::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageRequestCheckApi::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& MessageRequestCheckApi::version() const {
  // @@protoc_insertion_point(field_get:MessageRequestCheckApi.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageRequestCheckApi::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageRequestCheckApi.version)
}
inline void MessageRequestCheckApi::set_version(const char* value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageRequestCheckApi.version)
}
inline void MessageRequestCheckApi::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageRequestCheckApi.version)
}
inline ::std::string* MessageRequestCheckApi::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:MessageRequestCheckApi.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageRequestCheckApi::release_version() {
  // @@protoc_insertion_point(field_release:MessageRequestCheckApi.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageRequestCheckApi::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:MessageRequestCheckApi.version)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageRequestCheckApi_2eproto__INCLUDED
