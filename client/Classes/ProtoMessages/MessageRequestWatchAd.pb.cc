// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageRequestWatchAd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageRequestWatchAd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

void protobuf_ShutdownFile_MessageRequestWatchAd_2eproto() {
  delete MessageRequestWatchAd::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_MessageRequestWatchAd_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_MessageRequestWatchAd_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  MessageRequestWatchAd::default_instance_ = new MessageRequestWatchAd();
  MessageRequestWatchAd::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageRequestWatchAd_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_MessageRequestWatchAd_2eproto_once_);
void protobuf_AddDesc_MessageRequestWatchAd_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_MessageRequestWatchAd_2eproto_once_,
                 &protobuf_AddDesc_MessageRequestWatchAd_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageRequestWatchAd_2eproto {
  StaticDescriptorInitializer_MessageRequestWatchAd_2eproto() {
    protobuf_AddDesc_MessageRequestWatchAd_2eproto();
  }
} static_descriptor_initializer_MessageRequestWatchAd_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

static ::std::string* MutableUnknownFieldsForMessageRequestWatchAd(
    MessageRequestWatchAd* ptr) {
  return ptr->mutable_unknown_fields();
}

bool MessageRequestWatchAd_eAdType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessageRequestWatchAd_eAdType MessageRequestWatchAd::atVungle;
const MessageRequestWatchAd_eAdType MessageRequestWatchAd::atAdColony;
const MessageRequestWatchAd_eAdType MessageRequestWatchAd::eAdType_MIN;
const MessageRequestWatchAd_eAdType MessageRequestWatchAd::eAdType_MAX;
const int MessageRequestWatchAd::eAdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRequestWatchAd::kAdTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequestWatchAd::MessageRequestWatchAd()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageRequestWatchAd)
}

void MessageRequestWatchAd::InitAsDefaultInstance() {
}

MessageRequestWatchAd::MessageRequestWatchAd(const MessageRequestWatchAd& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MessageRequestWatchAd)
}

void MessageRequestWatchAd::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adtype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageRequestWatchAd::~MessageRequestWatchAd() {
  // @@protoc_insertion_point(destructor:MessageRequestWatchAd)
  SharedDtor();
}

void MessageRequestWatchAd::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MessageRequestWatchAd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MessageRequestWatchAd& MessageRequestWatchAd::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MessageRequestWatchAd_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MessageRequestWatchAd_2eproto();
#endif
  return *default_instance_;
}

MessageRequestWatchAd* MessageRequestWatchAd::default_instance_ = NULL;

MessageRequestWatchAd* MessageRequestWatchAd::New(::google::protobuf::Arena* arena) const {
  MessageRequestWatchAd* n = new MessageRequestWatchAd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequestWatchAd::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageRequestWatchAd)
  adtype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MessageRequestWatchAd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForMessageRequestWatchAd, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:MessageRequestWatchAd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MessageRequestWatchAd.eAdType adType = 1 [default = atVungle];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MessageRequestWatchAd_eAdType_IsValid(value)) {
            set_adtype(static_cast< ::MessageRequestWatchAd_eAdType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageRequestWatchAd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageRequestWatchAd)
  return false;
#undef DO_
}

void MessageRequestWatchAd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageRequestWatchAd)
  // required .MessageRequestWatchAd.eAdType adType = 1 [default = atVungle];
  if (has_adtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->adtype(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:MessageRequestWatchAd)
}

int MessageRequestWatchAd::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MessageRequestWatchAd)
  int total_size = 0;

  // required .MessageRequestWatchAd.eAdType adType = 1 [default = atVungle];
  if (has_adtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->adtype());
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequestWatchAd::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MessageRequestWatchAd*>(&from));
}

void MessageRequestWatchAd::MergeFrom(const MessageRequestWatchAd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageRequestWatchAd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_adtype()) {
      set_adtype(from.adtype());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void MessageRequestWatchAd::CopyFrom(const MessageRequestWatchAd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageRequestWatchAd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequestWatchAd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MessageRequestWatchAd::Swap(MessageRequestWatchAd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequestWatchAd::InternalSwap(MessageRequestWatchAd* other) {
  std::swap(adtype_, other->adtype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MessageRequestWatchAd::GetTypeName() const {
  return "MessageRequestWatchAd";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestWatchAd

// required .MessageRequestWatchAd.eAdType adType = 1 [default = atVungle];
bool MessageRequestWatchAd::has_adtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageRequestWatchAd::set_has_adtype() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageRequestWatchAd::clear_has_adtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageRequestWatchAd::clear_adtype() {
  adtype_ = 0;
  clear_has_adtype();
}
 ::MessageRequestWatchAd_eAdType MessageRequestWatchAd::adtype() const {
  // @@protoc_insertion_point(field_get:MessageRequestWatchAd.adType)
  return static_cast< ::MessageRequestWatchAd_eAdType >(adtype_);
}
 void MessageRequestWatchAd::set_adtype(::MessageRequestWatchAd_eAdType value) {
  assert(::MessageRequestWatchAd_eAdType_IsValid(value));
  set_has_adtype();
  adtype_ = value;
  // @@protoc_insertion_point(field_set:MessageRequestWatchAd.adType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
