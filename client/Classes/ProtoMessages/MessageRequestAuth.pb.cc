// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageRequestAuth.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageRequestAuth.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

void protobuf_ShutdownFile_MessageRequestAuth_2eproto() {
  delete MessageRequestAuth::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_MessageRequestAuth_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_MessageRequestAuth_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::protobuf_AddDesc_AuthType_2eproto();
  MessageRequestAuth::default_instance_ = new MessageRequestAuth();
  MessageRequestAuth::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageRequestAuth_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_MessageRequestAuth_2eproto_once_);
void protobuf_AddDesc_MessageRequestAuth_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_MessageRequestAuth_2eproto_once_,
                 &protobuf_AddDesc_MessageRequestAuth_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageRequestAuth_2eproto {
  StaticDescriptorInitializer_MessageRequestAuth_2eproto() {
    protobuf_AddDesc_MessageRequestAuth_2eproto();
  }
} static_descriptor_initializer_MessageRequestAuth_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

static ::std::string* MutableUnknownFieldsForMessageRequestAuth(
    MessageRequestAuth* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRequestAuth::kAuthTypeFieldNumber;
const int MessageRequestAuth::kLoginFieldNumber;
const int MessageRequestAuth::kPasswordFieldNumber;
const int MessageRequestAuth::kVerifyCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequestAuth::MessageRequestAuth()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageRequestAuth)
}

void MessageRequestAuth::InitAsDefaultInstance() {
}

MessageRequestAuth::MessageRequestAuth(const MessageRequestAuth& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MessageRequestAuth)
}

void MessageRequestAuth::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authtype_ = 0;
  login_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageRequestAuth::~MessageRequestAuth() {
  // @@protoc_insertion_point(destructor:MessageRequestAuth)
  SharedDtor();
}

void MessageRequestAuth::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifycode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MessageRequestAuth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MessageRequestAuth& MessageRequestAuth::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MessageRequestAuth_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MessageRequestAuth_2eproto();
#endif
  return *default_instance_;
}

MessageRequestAuth* MessageRequestAuth::default_instance_ = NULL;

MessageRequestAuth* MessageRequestAuth::New(::google::protobuf::Arena* arena) const {
  MessageRequestAuth* n = new MessageRequestAuth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequestAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageRequestAuth)
  if (_has_bits_[0 / 32] & 15u) {
    authtype_ = 0;
    if (has_login()) {
      login_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_verifycode()) {
      verifycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MessageRequestAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForMessageRequestAuth, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:MessageRequestAuth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .eAuthType authType = 1 [default = atNone];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::eAuthType_IsValid(value)) {
            set_authtype(static_cast< ::eAuthType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_login;
        break;
      }

      // optional string login = 2;
      case 2: {
        if (tag == 18) {
         parse_login:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_password;
        break;
      }

      // optional string password = 3;
      case 3: {
        if (tag == 26) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_verifyCode;
        break;
      }

      // optional string verifyCode = 4;
      case 4: {
        if (tag == 34) {
         parse_verifyCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verifycode()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageRequestAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageRequestAuth)
  return false;
#undef DO_
}

void MessageRequestAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageRequestAuth)
  // required .eAuthType authType = 1 [default = atNone];
  if (has_authtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->authtype(), output);
  }

  // optional string login = 2;
  if (has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->login(), output);
  }

  // optional string password = 3;
  if (has_password()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // optional string verifyCode = 4;
  if (has_verifycode()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->verifycode(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:MessageRequestAuth)
}

int MessageRequestAuth::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MessageRequestAuth)
  int total_size = 0;

  // required .eAuthType authType = 1 [default = atNone];
  if (has_authtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->authtype());
  }
  if (_has_bits_[1 / 32] & 14u) {
    // optional string login = 2;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->login());
    }

    // optional string password = 3;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string verifyCode = 4;
    if (has_verifycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->verifycode());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequestAuth::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MessageRequestAuth*>(&from));
}

void MessageRequestAuth::MergeFrom(const MessageRequestAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageRequestAuth)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_authtype()) {
      set_authtype(from.authtype());
    }
    if (from.has_login()) {
      set_has_login();
      login_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (from.has_verifycode()) {
      set_has_verifycode();
      verifycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifycode_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void MessageRequestAuth::CopyFrom(const MessageRequestAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageRequestAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequestAuth::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MessageRequestAuth::Swap(MessageRequestAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequestAuth::InternalSwap(MessageRequestAuth* other) {
  std::swap(authtype_, other->authtype_);
  login_.Swap(&other->login_);
  password_.Swap(&other->password_);
  verifycode_.Swap(&other->verifycode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MessageRequestAuth::GetTypeName() const {
  return "MessageRequestAuth";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestAuth

// required .eAuthType authType = 1 [default = atNone];
bool MessageRequestAuth::has_authtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageRequestAuth::set_has_authtype() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageRequestAuth::clear_has_authtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageRequestAuth::clear_authtype() {
  authtype_ = 0;
  clear_has_authtype();
}
 ::eAuthType MessageRequestAuth::authtype() const {
  // @@protoc_insertion_point(field_get:MessageRequestAuth.authType)
  return static_cast< ::eAuthType >(authtype_);
}
 void MessageRequestAuth::set_authtype(::eAuthType value) {
  assert(::eAuthType_IsValid(value));
  set_has_authtype();
  authtype_ = value;
  // @@protoc_insertion_point(field_set:MessageRequestAuth.authType)
}

// optional string login = 2;
bool MessageRequestAuth::has_login() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MessageRequestAuth::set_has_login() {
  _has_bits_[0] |= 0x00000002u;
}
void MessageRequestAuth::clear_has_login() {
  _has_bits_[0] &= ~0x00000002u;
}
void MessageRequestAuth::clear_login() {
  login_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_login();
}
 const ::std::string& MessageRequestAuth::login() const {
  // @@protoc_insertion_point(field_get:MessageRequestAuth.login)
  return login_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageRequestAuth::set_login(const ::std::string& value) {
  set_has_login();
  login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageRequestAuth.login)
}
 void MessageRequestAuth::set_login(const char* value) {
  set_has_login();
  login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageRequestAuth.login)
}
 void MessageRequestAuth::set_login(const char* value, size_t size) {
  set_has_login();
  login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageRequestAuth.login)
}
 ::std::string* MessageRequestAuth::mutable_login() {
  set_has_login();
  // @@protoc_insertion_point(field_mutable:MessageRequestAuth.login)
  return login_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageRequestAuth::release_login() {
  // @@protoc_insertion_point(field_release:MessageRequestAuth.login)
  clear_has_login();
  return login_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageRequestAuth::set_allocated_login(::std::string* login) {
  if (login != NULL) {
    set_has_login();
  } else {
    clear_has_login();
  }
  login_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login);
  // @@protoc_insertion_point(field_set_allocated:MessageRequestAuth.login)
}

// optional string password = 3;
bool MessageRequestAuth::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MessageRequestAuth::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
void MessageRequestAuth::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
void MessageRequestAuth::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
 const ::std::string& MessageRequestAuth::password() const {
  // @@protoc_insertion_point(field_get:MessageRequestAuth.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageRequestAuth::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageRequestAuth.password)
}
 void MessageRequestAuth::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageRequestAuth.password)
}
 void MessageRequestAuth::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageRequestAuth.password)
}
 ::std::string* MessageRequestAuth::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:MessageRequestAuth.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageRequestAuth::release_password() {
  // @@protoc_insertion_point(field_release:MessageRequestAuth.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageRequestAuth::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:MessageRequestAuth.password)
}

// optional string verifyCode = 4;
bool MessageRequestAuth::has_verifycode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MessageRequestAuth::set_has_verifycode() {
  _has_bits_[0] |= 0x00000008u;
}
void MessageRequestAuth::clear_has_verifycode() {
  _has_bits_[0] &= ~0x00000008u;
}
void MessageRequestAuth::clear_verifycode() {
  verifycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifycode();
}
 const ::std::string& MessageRequestAuth::verifycode() const {
  // @@protoc_insertion_point(field_get:MessageRequestAuth.verifyCode)
  return verifycode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageRequestAuth::set_verifycode(const ::std::string& value) {
  set_has_verifycode();
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageRequestAuth.verifyCode)
}
 void MessageRequestAuth::set_verifycode(const char* value) {
  set_has_verifycode();
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageRequestAuth.verifyCode)
}
 void MessageRequestAuth::set_verifycode(const char* value, size_t size) {
  set_has_verifycode();
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageRequestAuth.verifyCode)
}
 ::std::string* MessageRequestAuth::mutable_verifycode() {
  set_has_verifycode();
  // @@protoc_insertion_point(field_mutable:MessageRequestAuth.verifyCode)
  return verifycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageRequestAuth::release_verifycode() {
  // @@protoc_insertion_point(field_release:MessageRequestAuth.verifyCode)
  clear_has_verifycode();
  return verifycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageRequestAuth::set_allocated_verifycode(::std::string* verifycode) {
  if (verifycode != NULL) {
    set_has_verifycode();
  } else {
    clear_has_verifycode();
  }
  verifycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifycode);
  // @@protoc_insertion_point(field_set_allocated:MessageRequestAuth.verifyCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
