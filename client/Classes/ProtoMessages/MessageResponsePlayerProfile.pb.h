// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageResponsePlayerProfile.proto

#ifndef PROTOBUF_MessageResponsePlayerProfile_2eproto__INCLUDED
#define PROTOBUF_MessageResponsePlayerProfile_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MessageResponsePlayerProfile_2eproto();
void protobuf_AssignDesc_MessageResponsePlayerProfile_2eproto();
void protobuf_ShutdownFile_MessageResponsePlayerProfile_2eproto();

class MessageResponsePlayerProfile;

// ===================================================================

class MessageResponsePlayerProfile : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:MessageResponsePlayerProfile) */ {
 public:
  MessageResponsePlayerProfile();
  virtual ~MessageResponsePlayerProfile();

  MessageResponsePlayerProfile(const MessageResponsePlayerProfile& from);

  inline MessageResponsePlayerProfile& operator=(const MessageResponsePlayerProfile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const MessageResponsePlayerProfile& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MessageResponsePlayerProfile* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MessageResponsePlayerProfile* other);

  // implements Message ----------------------------------------------

  inline MessageResponsePlayerProfile* New() const { return New(NULL); }

  MessageResponsePlayerProfile* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MessageResponsePlayerProfile& from);
  void MergeFrom(const MessageResponsePlayerProfile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageResponsePlayerProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string playerName = 1 [default = ""];
  bool has_playername() const;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 1;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // required string playerEmail = 2 [default = ""];
  bool has_playeremail() const;
  void clear_playeremail();
  static const int kPlayerEmailFieldNumber = 2;
  const ::std::string& playeremail() const;
  void set_playeremail(const ::std::string& value);
  void set_playeremail(const char* value);
  void set_playeremail(const char* value, size_t size);
  ::std::string* mutable_playeremail();
  ::std::string* release_playeremail();
  void set_allocated_playeremail(::std::string* playeremail);

  // required int64 playerMoney = 3 [default = 0];
  bool has_playermoney() const;
  void clear_playermoney();
  static const int kPlayerMoneyFieldNumber = 3;
  ::google::protobuf::int64 playermoney() const;
  void set_playermoney(::google::protobuf::int64 value);

  // required bytes playerAvatar = 4 [default = "\000"];
  bool has_playeravatar() const;
  void clear_playeravatar();
  static const int kPlayerAvatarFieldNumber = 4;
  const ::std::string& playeravatar() const;
  void set_playeravatar(const ::std::string& value);
  void set_playeravatar(const char* value);
  void set_playeravatar(const void* value, size_t size);
  ::std::string* mutable_playeravatar();
  ::std::string* release_playeravatar();
  void set_allocated_playeravatar(::std::string* playeravatar);

  // required int32 playerWins = 5 [default = 0];
  bool has_playerwins() const;
  void clear_playerwins();
  static const int kPlayerWinsFieldNumber = 5;
  ::google::protobuf::int32 playerwins() const;
  void set_playerwins(::google::protobuf::int32 value);

  // required int32 playerLoses = 6 [default = 0];
  bool has_playerloses() const;
  void clear_playerloses();
  static const int kPlayerLosesFieldNumber = 6;
  ::google::protobuf::int32 playerloses() const;
  void set_playerloses(::google::protobuf::int32 value);

  // required int32 playerRating = 7 [default = 0];
  bool has_playerrating() const;
  void clear_playerrating();
  static const int kPlayerRatingFieldNumber = 7;
  ::google::protobuf::int32 playerrating() const;
  void set_playerrating(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MessageResponsePlayerProfile)
 private:
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_playeremail();
  inline void clear_has_playeremail();
  inline void set_has_playermoney();
  inline void clear_has_playermoney();
  inline void set_has_playeravatar();
  inline void clear_has_playeravatar();
  inline void set_has_playerwins();
  inline void clear_has_playerwins();
  inline void set_has_playerloses();
  inline void clear_has_playerloses();
  inline void set_has_playerrating();
  inline void clear_has_playerrating();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::internal::ArenaStringPtr playeremail_;
  ::google::protobuf::int64 playermoney_;
  static ::std::string* _default_playeravatar_;
  ::google::protobuf::internal::ArenaStringPtr playeravatar_;
  ::google::protobuf::int32 playerwins_;
  ::google::protobuf::int32 playerloses_;
  ::google::protobuf::int32 playerrating_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageResponsePlayerProfile_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageResponsePlayerProfile_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageResponsePlayerProfile_2eproto();
  friend void protobuf_ShutdownFile_MessageResponsePlayerProfile_2eproto();

  void InitAsDefaultInstance();
  static MessageResponsePlayerProfile* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageResponsePlayerProfile

// required string playerName = 1 [default = ""];
inline bool MessageResponsePlayerProfile::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageResponsePlayerProfile::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageResponsePlayerProfile::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageResponsePlayerProfile::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playername();
}
inline const ::std::string& MessageResponsePlayerProfile::playername() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerProfile.playerName)
  return playername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageResponsePlayerProfile::set_playername(const ::std::string& value) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageResponsePlayerProfile.playerName)
}
inline void MessageResponsePlayerProfile::set_playername(const char* value) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageResponsePlayerProfile.playerName)
}
inline void MessageResponsePlayerProfile::set_playername(const char* value, size_t size) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageResponsePlayerProfile.playerName)
}
inline ::std::string* MessageResponsePlayerProfile::mutable_playername() {
  set_has_playername();
  // @@protoc_insertion_point(field_mutable:MessageResponsePlayerProfile.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageResponsePlayerProfile::release_playername() {
  // @@protoc_insertion_point(field_release:MessageResponsePlayerProfile.playerName)
  clear_has_playername();
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageResponsePlayerProfile::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    set_has_playername();
  } else {
    clear_has_playername();
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:MessageResponsePlayerProfile.playerName)
}

// required string playerEmail = 2 [default = ""];
inline bool MessageResponsePlayerProfile::has_playeremail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageResponsePlayerProfile::set_has_playeremail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageResponsePlayerProfile::clear_has_playeremail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageResponsePlayerProfile::clear_playeremail() {
  playeremail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playeremail();
}
inline const ::std::string& MessageResponsePlayerProfile::playeremail() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerProfile.playerEmail)
  return playeremail_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageResponsePlayerProfile::set_playeremail(const ::std::string& value) {
  set_has_playeremail();
  playeremail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageResponsePlayerProfile.playerEmail)
}
inline void MessageResponsePlayerProfile::set_playeremail(const char* value) {
  set_has_playeremail();
  playeremail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageResponsePlayerProfile.playerEmail)
}
inline void MessageResponsePlayerProfile::set_playeremail(const char* value, size_t size) {
  set_has_playeremail();
  playeremail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageResponsePlayerProfile.playerEmail)
}
inline ::std::string* MessageResponsePlayerProfile::mutable_playeremail() {
  set_has_playeremail();
  // @@protoc_insertion_point(field_mutable:MessageResponsePlayerProfile.playerEmail)
  return playeremail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageResponsePlayerProfile::release_playeremail() {
  // @@protoc_insertion_point(field_release:MessageResponsePlayerProfile.playerEmail)
  clear_has_playeremail();
  return playeremail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageResponsePlayerProfile::set_allocated_playeremail(::std::string* playeremail) {
  if (playeremail != NULL) {
    set_has_playeremail();
  } else {
    clear_has_playeremail();
  }
  playeremail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playeremail);
  // @@protoc_insertion_point(field_set_allocated:MessageResponsePlayerProfile.playerEmail)
}

// required int64 playerMoney = 3 [default = 0];
inline bool MessageResponsePlayerProfile::has_playermoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageResponsePlayerProfile::set_has_playermoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageResponsePlayerProfile::clear_has_playermoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageResponsePlayerProfile::clear_playermoney() {
  playermoney_ = GOOGLE_LONGLONG(0);
  clear_has_playermoney();
}
inline ::google::protobuf::int64 MessageResponsePlayerProfile::playermoney() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerProfile.playerMoney)
  return playermoney_;
}
inline void MessageResponsePlayerProfile::set_playermoney(::google::protobuf::int64 value) {
  set_has_playermoney();
  playermoney_ = value;
  // @@protoc_insertion_point(field_set:MessageResponsePlayerProfile.playerMoney)
}

// required bytes playerAvatar = 4 [default = "\000"];
inline bool MessageResponsePlayerProfile::has_playeravatar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageResponsePlayerProfile::set_has_playeravatar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageResponsePlayerProfile::clear_has_playeravatar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageResponsePlayerProfile::clear_playeravatar() {
  playeravatar_.ClearToDefaultNoArena(_default_playeravatar_);
  clear_has_playeravatar();
}
inline const ::std::string& MessageResponsePlayerProfile::playeravatar() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerProfile.playerAvatar)
  return playeravatar_.GetNoArena(_default_playeravatar_);
}
inline void MessageResponsePlayerProfile::set_playeravatar(const ::std::string& value) {
  set_has_playeravatar();
  playeravatar_.SetNoArena(_default_playeravatar_, value);
  // @@protoc_insertion_point(field_set:MessageResponsePlayerProfile.playerAvatar)
}
inline void MessageResponsePlayerProfile::set_playeravatar(const char* value) {
  set_has_playeravatar();
  playeravatar_.SetNoArena(_default_playeravatar_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageResponsePlayerProfile.playerAvatar)
}
inline void MessageResponsePlayerProfile::set_playeravatar(const void* value, size_t size) {
  set_has_playeravatar();
  playeravatar_.SetNoArena(_default_playeravatar_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageResponsePlayerProfile.playerAvatar)
}
inline ::std::string* MessageResponsePlayerProfile::mutable_playeravatar() {
  set_has_playeravatar();
  // @@protoc_insertion_point(field_mutable:MessageResponsePlayerProfile.playerAvatar)
  return playeravatar_.MutableNoArena(_default_playeravatar_);
}
inline ::std::string* MessageResponsePlayerProfile::release_playeravatar() {
  // @@protoc_insertion_point(field_release:MessageResponsePlayerProfile.playerAvatar)
  clear_has_playeravatar();
  return playeravatar_.ReleaseNoArena(_default_playeravatar_);
}
inline void MessageResponsePlayerProfile::set_allocated_playeravatar(::std::string* playeravatar) {
  if (playeravatar != NULL) {
    set_has_playeravatar();
  } else {
    clear_has_playeravatar();
  }
  playeravatar_.SetAllocatedNoArena(_default_playeravatar_, playeravatar);
  // @@protoc_insertion_point(field_set_allocated:MessageResponsePlayerProfile.playerAvatar)
}

// required int32 playerWins = 5 [default = 0];
inline bool MessageResponsePlayerProfile::has_playerwins() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MessageResponsePlayerProfile::set_has_playerwins() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MessageResponsePlayerProfile::clear_has_playerwins() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MessageResponsePlayerProfile::clear_playerwins() {
  playerwins_ = 0;
  clear_has_playerwins();
}
inline ::google::protobuf::int32 MessageResponsePlayerProfile::playerwins() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerProfile.playerWins)
  return playerwins_;
}
inline void MessageResponsePlayerProfile::set_playerwins(::google::protobuf::int32 value) {
  set_has_playerwins();
  playerwins_ = value;
  // @@protoc_insertion_point(field_set:MessageResponsePlayerProfile.playerWins)
}

// required int32 playerLoses = 6 [default = 0];
inline bool MessageResponsePlayerProfile::has_playerloses() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MessageResponsePlayerProfile::set_has_playerloses() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MessageResponsePlayerProfile::clear_has_playerloses() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MessageResponsePlayerProfile::clear_playerloses() {
  playerloses_ = 0;
  clear_has_playerloses();
}
inline ::google::protobuf::int32 MessageResponsePlayerProfile::playerloses() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerProfile.playerLoses)
  return playerloses_;
}
inline void MessageResponsePlayerProfile::set_playerloses(::google::protobuf::int32 value) {
  set_has_playerloses();
  playerloses_ = value;
  // @@protoc_insertion_point(field_set:MessageResponsePlayerProfile.playerLoses)
}

// required int32 playerRating = 7 [default = 0];
inline bool MessageResponsePlayerProfile::has_playerrating() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MessageResponsePlayerProfile::set_has_playerrating() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MessageResponsePlayerProfile::clear_has_playerrating() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MessageResponsePlayerProfile::clear_playerrating() {
  playerrating_ = 0;
  clear_has_playerrating();
}
inline ::google::protobuf::int32 MessageResponsePlayerProfile::playerrating() const {
  // @@protoc_insertion_point(field_get:MessageResponsePlayerProfile.playerRating)
  return playerrating_;
}
inline void MessageResponsePlayerProfile::set_playerrating(::google::protobuf::int32 value) {
  set_has_playerrating();
  playerrating_ = value;
  // @@protoc_insertion_point(field_set:MessageResponsePlayerProfile.playerRating)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageResponsePlayerProfile_2eproto__INCLUDED
