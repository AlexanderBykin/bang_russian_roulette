// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageResponseTimeToResults.proto

#ifndef PROTOBUF_MessageResponseTimeToResults_2eproto__INCLUDED
#define PROTOBUF_MessageResponseTimeToResults_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include "MessageResponseRoundPlayerBang.pb.h"
#include "MessageResponseRoundPlayerDuelist.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MessageResponseTimeToResults_2eproto();
void protobuf_AssignDesc_MessageResponseTimeToResults_2eproto();
void protobuf_ShutdownFile_MessageResponseTimeToResults_2eproto();

class MessageResponseTimeToResults;

enum MessageResponseTimeToResults_eRoomResultType {
  MessageResponseTimeToResults_eRoomResultType_rrtPlayerBang = 0,
  MessageResponseTimeToResults_eRoomResultType_rrtPlayerDuelist = 1
};
bool MessageResponseTimeToResults_eRoomResultType_IsValid(int value);
const MessageResponseTimeToResults_eRoomResultType MessageResponseTimeToResults_eRoomResultType_eRoomResultType_MIN = MessageResponseTimeToResults_eRoomResultType_rrtPlayerBang;
const MessageResponseTimeToResults_eRoomResultType MessageResponseTimeToResults_eRoomResultType_eRoomResultType_MAX = MessageResponseTimeToResults_eRoomResultType_rrtPlayerDuelist;
const int MessageResponseTimeToResults_eRoomResultType_eRoomResultType_ARRAYSIZE = MessageResponseTimeToResults_eRoomResultType_eRoomResultType_MAX + 1;

// ===================================================================

class MessageResponseTimeToResults : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:MessageResponseTimeToResults) */ {
 public:
  MessageResponseTimeToResults();
  virtual ~MessageResponseTimeToResults();

  MessageResponseTimeToResults(const MessageResponseTimeToResults& from);

  inline MessageResponseTimeToResults& operator=(const MessageResponseTimeToResults& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const MessageResponseTimeToResults& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MessageResponseTimeToResults* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MessageResponseTimeToResults* other);

  // implements Message ----------------------------------------------

  inline MessageResponseTimeToResults* New() const { return New(NULL); }

  MessageResponseTimeToResults* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MessageResponseTimeToResults& from);
  void MergeFrom(const MessageResponseTimeToResults& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageResponseTimeToResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef MessageResponseTimeToResults_eRoomResultType eRoomResultType;
  static const eRoomResultType rrtPlayerBang =
    MessageResponseTimeToResults_eRoomResultType_rrtPlayerBang;
  static const eRoomResultType rrtPlayerDuelist =
    MessageResponseTimeToResults_eRoomResultType_rrtPlayerDuelist;
  static inline bool eRoomResultType_IsValid(int value) {
    return MessageResponseTimeToResults_eRoomResultType_IsValid(value);
  }
  static const eRoomResultType eRoomResultType_MIN =
    MessageResponseTimeToResults_eRoomResultType_eRoomResultType_MIN;
  static const eRoomResultType eRoomResultType_MAX =
    MessageResponseTimeToResults_eRoomResultType_eRoomResultType_MAX;
  static const int eRoomResultType_ARRAYSIZE =
    MessageResponseTimeToResults_eRoomResultType_eRoomResultType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required int64 roomId = 1 [default = 0];
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int64 roomid() const;
  void set_roomid(::google::protobuf::int64 value);

  // required int32 time = 2 [default = 0];
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // required .MessageResponseTimeToResults.eRoomResultType resultType = 3 [default = rrtPlayerBang];
  bool has_resulttype() const;
  void clear_resulttype();
  static const int kResultTypeFieldNumber = 3;
  ::MessageResponseTimeToResults_eRoomResultType resulttype() const;
  void set_resulttype(::MessageResponseTimeToResults_eRoomResultType value);

  // repeated .MessageResponseRoundPlayerBang gameResults = 4;
  int gameresults_size() const;
  void clear_gameresults();
  static const int kGameResultsFieldNumber = 4;
  const ::MessageResponseRoundPlayerBang& gameresults(int index) const;
  ::MessageResponseRoundPlayerBang* mutable_gameresults(int index);
  ::MessageResponseRoundPlayerBang* add_gameresults();
  ::google::protobuf::RepeatedPtrField< ::MessageResponseRoundPlayerBang >*
      mutable_gameresults();
  const ::google::protobuf::RepeatedPtrField< ::MessageResponseRoundPlayerBang >&
      gameresults() const;

  // repeated .MessageResponseRoundPlayerDuelist duelistResults = 5;
  int duelistresults_size() const;
  void clear_duelistresults();
  static const int kDuelistResultsFieldNumber = 5;
  const ::MessageResponseRoundPlayerDuelist& duelistresults(int index) const;
  ::MessageResponseRoundPlayerDuelist* mutable_duelistresults(int index);
  ::MessageResponseRoundPlayerDuelist* add_duelistresults();
  ::google::protobuf::RepeatedPtrField< ::MessageResponseRoundPlayerDuelist >*
      mutable_duelistresults();
  const ::google::protobuf::RepeatedPtrField< ::MessageResponseRoundPlayerDuelist >&
      duelistresults() const;

  // @@protoc_insertion_point(class_scope:MessageResponseTimeToResults)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_resulttype();
  inline void clear_has_resulttype();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 roomid_;
  ::google::protobuf::int32 time_;
  int resulttype_;
  ::google::protobuf::RepeatedPtrField< ::MessageResponseRoundPlayerBang > gameresults_;
  ::google::protobuf::RepeatedPtrField< ::MessageResponseRoundPlayerDuelist > duelistresults_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageResponseTimeToResults_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageResponseTimeToResults_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageResponseTimeToResults_2eproto();
  friend void protobuf_ShutdownFile_MessageResponseTimeToResults_2eproto();

  void InitAsDefaultInstance();
  static MessageResponseTimeToResults* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageResponseTimeToResults

// required int64 roomId = 1 [default = 0];
inline bool MessageResponseTimeToResults::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageResponseTimeToResults::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageResponseTimeToResults::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageResponseTimeToResults::clear_roomid() {
  roomid_ = GOOGLE_LONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::int64 MessageResponseTimeToResults::roomid() const {
  // @@protoc_insertion_point(field_get:MessageResponseTimeToResults.roomId)
  return roomid_;
}
inline void MessageResponseTimeToResults::set_roomid(::google::protobuf::int64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseTimeToResults.roomId)
}

// required int32 time = 2 [default = 0];
inline bool MessageResponseTimeToResults::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageResponseTimeToResults::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageResponseTimeToResults::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageResponseTimeToResults::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 MessageResponseTimeToResults::time() const {
  // @@protoc_insertion_point(field_get:MessageResponseTimeToResults.time)
  return time_;
}
inline void MessageResponseTimeToResults::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseTimeToResults.time)
}

// required .MessageResponseTimeToResults.eRoomResultType resultType = 3 [default = rrtPlayerBang];
inline bool MessageResponseTimeToResults::has_resulttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageResponseTimeToResults::set_has_resulttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageResponseTimeToResults::clear_has_resulttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageResponseTimeToResults::clear_resulttype() {
  resulttype_ = 0;
  clear_has_resulttype();
}
inline ::MessageResponseTimeToResults_eRoomResultType MessageResponseTimeToResults::resulttype() const {
  // @@protoc_insertion_point(field_get:MessageResponseTimeToResults.resultType)
  return static_cast< ::MessageResponseTimeToResults_eRoomResultType >(resulttype_);
}
inline void MessageResponseTimeToResults::set_resulttype(::MessageResponseTimeToResults_eRoomResultType value) {
  assert(::MessageResponseTimeToResults_eRoomResultType_IsValid(value));
  set_has_resulttype();
  resulttype_ = value;
  // @@protoc_insertion_point(field_set:MessageResponseTimeToResults.resultType)
}

// repeated .MessageResponseRoundPlayerBang gameResults = 4;
inline int MessageResponseTimeToResults::gameresults_size() const {
  return gameresults_.size();
}
inline void MessageResponseTimeToResults::clear_gameresults() {
  gameresults_.Clear();
}
inline const ::MessageResponseRoundPlayerBang& MessageResponseTimeToResults::gameresults(int index) const {
  // @@protoc_insertion_point(field_get:MessageResponseTimeToResults.gameResults)
  return gameresults_.Get(index);
}
inline ::MessageResponseRoundPlayerBang* MessageResponseTimeToResults::mutable_gameresults(int index) {
  // @@protoc_insertion_point(field_mutable:MessageResponseTimeToResults.gameResults)
  return gameresults_.Mutable(index);
}
inline ::MessageResponseRoundPlayerBang* MessageResponseTimeToResults::add_gameresults() {
  // @@protoc_insertion_point(field_add:MessageResponseTimeToResults.gameResults)
  return gameresults_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MessageResponseRoundPlayerBang >*
MessageResponseTimeToResults::mutable_gameresults() {
  // @@protoc_insertion_point(field_mutable_list:MessageResponseTimeToResults.gameResults)
  return &gameresults_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MessageResponseRoundPlayerBang >&
MessageResponseTimeToResults::gameresults() const {
  // @@protoc_insertion_point(field_list:MessageResponseTimeToResults.gameResults)
  return gameresults_;
}

// repeated .MessageResponseRoundPlayerDuelist duelistResults = 5;
inline int MessageResponseTimeToResults::duelistresults_size() const {
  return duelistresults_.size();
}
inline void MessageResponseTimeToResults::clear_duelistresults() {
  duelistresults_.Clear();
}
inline const ::MessageResponseRoundPlayerDuelist& MessageResponseTimeToResults::duelistresults(int index) const {
  // @@protoc_insertion_point(field_get:MessageResponseTimeToResults.duelistResults)
  return duelistresults_.Get(index);
}
inline ::MessageResponseRoundPlayerDuelist* MessageResponseTimeToResults::mutable_duelistresults(int index) {
  // @@protoc_insertion_point(field_mutable:MessageResponseTimeToResults.duelistResults)
  return duelistresults_.Mutable(index);
}
inline ::MessageResponseRoundPlayerDuelist* MessageResponseTimeToResults::add_duelistresults() {
  // @@protoc_insertion_point(field_add:MessageResponseTimeToResults.duelistResults)
  return duelistresults_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MessageResponseRoundPlayerDuelist >*
MessageResponseTimeToResults::mutable_duelistresults() {
  // @@protoc_insertion_point(field_mutable_list:MessageResponseTimeToResults.duelistResults)
  return &duelistresults_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MessageResponseRoundPlayerDuelist >&
MessageResponseTimeToResults::duelistresults() const {
  // @@protoc_insertion_point(field_list:MessageResponseTimeToResults.duelistResults)
  return duelistresults_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MessageResponseTimeToResults_eRoomResultType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageResponseTimeToResults_2eproto__INCLUDED
