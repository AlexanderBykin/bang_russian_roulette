<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by: applicationContext.xml.vsl in andromda-spring-cartridge. -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd">

    <!-- ========================= GENERAL DEFINITIONS ========================= -->

    <!-- Message source for this context, loaded from localized "messages_xx" files -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename"><value>messages</value></property>
    </bean>

    <!-- applicationContext merge-point -->
    <bean id="hibernateMappingLocations" class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <!-- applicationContext hibernateMappingLocations merge-point -->
                <value>classpath:net/orionlab/brr/domain/AbstractUser.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/UserSession.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/Room.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/RoomRound.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/RoundPlayer.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/PlayerPaymentRequest.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/RoundPlayerBet.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/RoundPlayerShoot.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/RoundPlayerBullet.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/RoundPlayerDuelist.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/ShopItem.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/ShopItemLocale.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/RoundPlayerUsedItem.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/PlayerShopItem.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/ShopItemCollection.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/ShopItemCollectionItem.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/SystemProperty.hbm.xml</value>
                <value>classpath:net/orionlab/brr/domain/RoundPlayerResult.hbm.xml</value>
            </list>
         </property>
    </bean>

    <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.default_batch_fetch_size">16</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
                <prop key="hibernate.cache.query_cache_factory">org.hibernate.cache.StandardQueryCacheFactory</prop>
                <prop key="hibernate.connection.release_mode">auto</prop>
                <!-- add specific (non-supported in the Spring cartridge) hibernate properties here -->
            </props>
        </property>
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingLocations" ref="hibernateMappingLocations"/>
        <property name="hibernateProperties" ref="hibernateProperties"/>
        <!-- applicationContext sessionFactory merge-point -->
    </bean>

    <!-- The Hibernate interceptor -->
    <bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- applicationContext hibernateInterceptor merge-point -->
    </bean>

    <bean id="net.orionlab.brr.domain.AbstractUserDaoImpl" class="net.orionlab.brr.domain.AbstractUserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- AbstractUser entity property merge-point -->
    </bean>

    <!-- AbstractUser Entity Proxy with inner AbstractUser Entity implementation -->
    <bean id="abstractUserDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.AbstractUserDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.AbstractUserDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.UserSessionDaoImpl" class="net.orionlab.brr.domain.UserSessionDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- UserSession entity property merge-point -->
    </bean>

    <!-- UserSession Entity Proxy with inner UserSession Entity implementation -->
    <bean id="userSessionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.UserSessionDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.UserSessionDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.PlayerDaoImpl" class="net.orionlab.brr.domain.PlayerDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- Player entity property merge-point -->
    </bean>

    <!-- Player Entity Proxy with inner Player Entity implementation -->
    <bean id="playerDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.PlayerDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.PlayerDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.RoomDaoImpl" class="net.orionlab.brr.domain.RoomDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- Room entity property merge-point -->
    </bean>

    <!-- Room Entity Proxy with inner Room Entity implementation -->
    <bean id="roomDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.RoomDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.RoomDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.RoomRoundDaoImpl" class="net.orionlab.brr.domain.RoomRoundDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- RoomRound entity property merge-point -->
    </bean>

    <!-- RoomRound Entity Proxy with inner RoomRound Entity implementation -->
    <bean id="roomRoundDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.RoomRoundDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.RoomRoundDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.RoundPlayerDaoImpl" class="net.orionlab.brr.domain.RoundPlayerDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- RoundPlayer entity property merge-point -->
    </bean>

    <!-- RoundPlayer Entity Proxy with inner RoundPlayer Entity implementation -->
    <bean id="roundPlayerDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.RoundPlayerDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.RoundPlayerDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.PlayerPaymentRequestDaoImpl" class="net.orionlab.brr.domain.PlayerPaymentRequestDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- PlayerPaymentRequest entity property merge-point -->
    </bean>

    <!-- PlayerPaymentRequest Entity Proxy with inner PlayerPaymentRequest Entity implementation -->
    <bean id="playerPaymentRequestDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.PlayerPaymentRequestDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.PlayerPaymentRequestDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.RoundPlayerBetDaoImpl" class="net.orionlab.brr.domain.RoundPlayerBetDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- RoundPlayerBet entity property merge-point -->
    </bean>

    <!-- RoundPlayerBet Entity Proxy with inner RoundPlayerBet Entity implementation -->
    <bean id="roundPlayerBetDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.RoundPlayerBetDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.RoundPlayerBetDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.RoundPlayerShootDaoImpl" class="net.orionlab.brr.domain.RoundPlayerShootDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- RoundPlayerShoot entity property merge-point -->
    </bean>

    <!-- RoundPlayerShoot Entity Proxy with inner RoundPlayerShoot Entity implementation -->
    <bean id="roundPlayerShootDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.RoundPlayerShootDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.RoundPlayerShootDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.RoundPlayerBulletDaoImpl" class="net.orionlab.brr.domain.RoundPlayerBulletDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- RoundPlayerBullet entity property merge-point -->
    </bean>

    <!-- RoundPlayerBullet Entity Proxy with inner RoundPlayerBullet Entity implementation -->
    <bean id="roundPlayerBulletDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.RoundPlayerBulletDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.RoundPlayerBulletDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.RoundPlayerDuelistDaoImpl" class="net.orionlab.brr.domain.RoundPlayerDuelistDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- RoundPlayerDuelist entity property merge-point -->
    </bean>

    <!-- RoundPlayerDuelist Entity Proxy with inner RoundPlayerDuelist Entity implementation -->
    <bean id="roundPlayerDuelistDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.RoundPlayerDuelistDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.RoundPlayerDuelistDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.ShopItemDaoImpl" class="net.orionlab.brr.domain.ShopItemDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- ShopItem entity property merge-point -->
    </bean>

    <!-- ShopItem Entity Proxy with inner ShopItem Entity implementation -->
    <bean id="shopItemDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.ShopItemDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.ShopItemDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.ShopItemLocaleDaoImpl" class="net.orionlab.brr.domain.ShopItemLocaleDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- ShopItemLocale entity property merge-point -->
    </bean>

    <!-- ShopItemLocale Entity Proxy with inner ShopItemLocale Entity implementation -->
    <bean id="shopItemLocaleDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.ShopItemLocaleDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.ShopItemLocaleDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.RoundPlayerUsedItemDaoImpl" class="net.orionlab.brr.domain.RoundPlayerUsedItemDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- RoundPlayerUsedItem entity property merge-point -->
    </bean>

    <!-- RoundPlayerUsedItem Entity Proxy with inner RoundPlayerUsedItem Entity implementation -->
    <bean id="roundPlayerUsedItemDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.RoundPlayerUsedItemDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.RoundPlayerUsedItemDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.PlayerShopItemDaoImpl" class="net.orionlab.brr.domain.PlayerShopItemDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- PlayerShopItem entity property merge-point -->
    </bean>

    <!-- PlayerShopItem Entity Proxy with inner PlayerShopItem Entity implementation -->
    <bean id="playerShopItemDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.PlayerShopItemDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.PlayerShopItemDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.ShopItemCollectionDaoImpl" class="net.orionlab.brr.domain.ShopItemCollectionDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- ShopItemCollection entity property merge-point -->
    </bean>

    <!-- ShopItemCollection Entity Proxy with inner ShopItemCollection Entity implementation -->
    <bean id="shopItemCollectionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.ShopItemCollectionDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.ShopItemCollectionDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.ShopItemCollectionItemDaoImpl" class="net.orionlab.brr.domain.ShopItemCollectionItemDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- ShopItemCollectionItem entity property merge-point -->
    </bean>

    <!-- ShopItemCollectionItem Entity Proxy with inner ShopItemCollectionItem Entity implementation -->
    <bean id="shopItemCollectionItemDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.ShopItemCollectionItemDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.ShopItemCollectionItemDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.SystemPropertyDaoImpl" class="net.orionlab.brr.domain.SystemPropertyDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- SystemProperty entity property merge-point -->
    </bean>

    <!-- SystemProperty Entity Proxy with inner SystemProperty Entity implementation -->
    <bean id="systemPropertyDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.SystemPropertyDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.SystemPropertyDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="net.orionlab.brr.domain.RoundPlayerResultDaoImpl" class="net.orionlab.brr.domain.RoundPlayerResultDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- RoundPlayerResult entity property merge-point -->
    </bean>

    <!-- RoundPlayerResult Entity Proxy with inner RoundPlayerResult Entity implementation -->
    <bean id="roundPlayerResultDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.domain.RoundPlayerResultDaoImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.domain.RoundPlayerResultDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ========================= Start of SERVICE DEFINITIONS ========================= -->

    <!-- Service Transactional Interceptor -->
    <bean id="serviceTransactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributeSource">
            <value>
                net.orionlab.brr.service.DumbService.doDumb=PROPAGATION_REQUIRED
            </value>
        </property>
    <!-- applicationContext serviceTransactionInterceptor merge-point -->
    </bean>

    <bean id="net.orionlab.brr.service.DumbServiceImpl" class="net.orionlab.brr.service.DumbServiceImpl" >
        <!-- DumbService service property merge-point -->
    </bean>

    <!-- DumbService Service Proxy with inner DumbService Service Implementation -->
    <bean id="dumbService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="net.orionlab.brr.service.DumbServiceImpl"/>
        <property name="proxyInterfaces" value="net.orionlab.brr.service.DumbService"/>
        <property name="interceptorNames">
            <list>
                <value>serviceTransactionInterceptor</value>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ========================= End of SERVICE DEFINITIONS ========================= -->

</beans>
