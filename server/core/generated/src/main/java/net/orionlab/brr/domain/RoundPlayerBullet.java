// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: hibernate/HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package net.orionlab.brr.domain;

import java.io.Serializable;
import java.util.Date;

/**
 * 
 */
// HibernateEntity.vsl annotations merge-point
public abstract class RoundPlayerBullet
    implements Serializable, Comparable<RoundPlayerBullet>
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 8218781686666859267L;

    // Generate 21 attributes
    private PistolType pistolType;

    /**
     * 
     * @return this.pistolType PistolType
     */
    public PistolType getPistolType()
    {
        return this.pistolType;
    }

    /**
     * 
     * @param pistolTypeIn PistolType
     */
    public void setPistolType(PistolType pistolTypeIn)
    {
        this.pistolType = pistolTypeIn;
    }

    private Boolean b1 = Boolean.valueOf(false);

    /**
     * 
     * @return this.b1 Boolean
     */
    public Boolean getB1()
    {
        return this.b1;
    }

    /**
     * 
     * @param b1In Boolean
     */
    public void setB1(Boolean b1In)
    {
        this.b1 = b1In;
    }

    private Boolean b2 = Boolean.valueOf(false);

    /**
     * 
     * @return this.b2 Boolean
     */
    public Boolean getB2()
    {
        return this.b2;
    }

    /**
     * 
     * @param b2In Boolean
     */
    public void setB2(Boolean b2In)
    {
        this.b2 = b2In;
    }

    private Boolean b3 = Boolean.valueOf(false);

    /**
     * 
     * @return this.b3 Boolean
     */
    public Boolean getB3()
    {
        return this.b3;
    }

    /**
     * 
     * @param b3In Boolean
     */
    public void setB3(Boolean b3In)
    {
        this.b3 = b3In;
    }

    private Boolean b4 = Boolean.valueOf(false);

    /**
     * 
     * @return this.b4 Boolean
     */
    public Boolean getB4()
    {
        return this.b4;
    }

    /**
     * 
     * @param b4In Boolean
     */
    public void setB4(Boolean b4In)
    {
        this.b4 = b4In;
    }

    private Boolean b5 = Boolean.valueOf(false);

    /**
     * 
     * @return this.b5 Boolean
     */
    public Boolean getB5()
    {
        return this.b5;
    }

    /**
     * 
     * @param b5In Boolean
     */
    public void setB5(Boolean b5In)
    {
        this.b5 = b5In;
    }

    private Boolean b6 = Boolean.valueOf(false);

    /**
     * 
     * @return this.b6 Boolean
     */
    public Boolean getB6()
    {
        return this.b6;
    }

    /**
     * 
     * @param b6In Boolean
     */
    public void setB6(Boolean b6In)
    {
        this.b6 = b6In;
    }

    private Boolean b1broken = Boolean.valueOf(false);

    /**
     * 
     * @return this.b1broken Boolean
     */
    public Boolean getB1broken()
    {
        return this.b1broken;
    }

    /**
     * 
     * @param b1brokenIn Boolean
     */
    public void setB1broken(Boolean b1brokenIn)
    {
        this.b1broken = b1brokenIn;
    }

    private Boolean b2broken = Boolean.valueOf(false);

    /**
     * 
     * @return this.b2broken Boolean
     */
    public Boolean getB2broken()
    {
        return this.b2broken;
    }

    /**
     * 
     * @param b2brokenIn Boolean
     */
    public void setB2broken(Boolean b2brokenIn)
    {
        this.b2broken = b2brokenIn;
    }

    private Boolean b3broken = Boolean.valueOf(false);

    /**
     * 
     * @return this.b3broken Boolean
     */
    public Boolean getB3broken()
    {
        return this.b3broken;
    }

    /**
     * 
     * @param b3brokenIn Boolean
     */
    public void setB3broken(Boolean b3brokenIn)
    {
        this.b3broken = b3brokenIn;
    }

    private Boolean b4broken = Boolean.valueOf(false);

    /**
     * 
     * @return this.b4broken Boolean
     */
    public Boolean getB4broken()
    {
        return this.b4broken;
    }

    /**
     * 
     * @param b4brokenIn Boolean
     */
    public void setB4broken(Boolean b4brokenIn)
    {
        this.b4broken = b4brokenIn;
    }

    private Boolean b5broken = Boolean.valueOf(false);

    /**
     * 
     * @return this.b5broken Boolean
     */
    public Boolean getB5broken()
    {
        return this.b5broken;
    }

    /**
     * 
     * @param b5brokenIn Boolean
     */
    public void setB5broken(Boolean b5brokenIn)
    {
        this.b5broken = b5brokenIn;
    }

    private Boolean b6broken = Boolean.valueOf(false);

    /**
     * 
     * @return this.b6broken Boolean
     */
    public Boolean getB6broken()
    {
        return this.b6broken;
    }

    /**
     * 
     * @param b6brokenIn Boolean
     */
    public void setB6broken(Boolean b6brokenIn)
    {
        this.b6broken = b6brokenIn;
    }

    private Boolean b1armored = Boolean.valueOf(false);

    /**
     * 
     * @return this.b1armored Boolean
     */
    public Boolean getB1armored()
    {
        return this.b1armored;
    }

    /**
     * 
     * @param b1armoredIn Boolean
     */
    public void setB1armored(Boolean b1armoredIn)
    {
        this.b1armored = b1armoredIn;
    }

    private Boolean b2armored = Boolean.valueOf(false);

    /**
     * 
     * @return this.b2armored Boolean
     */
    public Boolean getB2armored()
    {
        return this.b2armored;
    }

    /**
     * 
     * @param b2armoredIn Boolean
     */
    public void setB2armored(Boolean b2armoredIn)
    {
        this.b2armored = b2armoredIn;
    }

    private Boolean b3armored = Boolean.valueOf(false);

    /**
     * 
     * @return this.b3armored Boolean
     */
    public Boolean getB3armored()
    {
        return this.b3armored;
    }

    /**
     * 
     * @param b3armoredIn Boolean
     */
    public void setB3armored(Boolean b3armoredIn)
    {
        this.b3armored = b3armoredIn;
    }

    private Boolean b4armored = Boolean.valueOf(false);

    /**
     * 
     * @return this.b4armored Boolean
     */
    public Boolean getB4armored()
    {
        return this.b4armored;
    }

    /**
     * 
     * @param b4armoredIn Boolean
     */
    public void setB4armored(Boolean b4armoredIn)
    {
        this.b4armored = b4armoredIn;
    }

    private Boolean b5armored = Boolean.valueOf(false);

    /**
     * 
     * @return this.b5armored Boolean
     */
    public Boolean getB5armored()
    {
        return this.b5armored;
    }

    /**
     * 
     * @param b5armoredIn Boolean
     */
    public void setB5armored(Boolean b5armoredIn)
    {
        this.b5armored = b5armoredIn;
    }

    private Boolean b6armored = Boolean.valueOf(false);

    /**
     * 
     * @return this.b6armored Boolean
     */
    public Boolean getB6armored()
    {
        return this.b6armored;
    }

    /**
     * 
     * @param b6armoredIn Boolean
     */
    public void setB6armored(Boolean b6armoredIn)
    {
        this.b6armored = b6armoredIn;
    }

    private Date dateCreate;

    /**
     * 
     * @return this.dateCreate Date
     */
    public Date getDateCreate()
    {
        return this.dateCreate;
    }

    /**
     * 
     * @param dateCreateIn Date
     */
    public void setDateCreate(Date dateCreateIn)
    {
        this.dateCreate = dateCreateIn;
    }

    private Long id;

    /**
     * 
     * @return this.id Long
     */
    public Long getId()
    {
        return this.id;
    }

    /**
     * 
     * @param idIn Long
     */
    public void setId(Long idIn)
    {
        this.id = idIn;
    }

    // Generate 2 associations
    private Player player;

    /**
     * 
     * @return this.player Player
     */
    public Player getPlayer()
    {
        return this.player;
    }

    /**
     * 
     * @param playerIn Player
     */
    public void setPlayer(Player playerIn)
    {
        this.player = playerIn;
    }

    private RoomRound round;

    /**
     * 
     * @return this.round RoomRound
     */
    public RoomRound getRound()
    {
        return this.round;
    }

    /**
     * 
     * @param roundIn RoomRound
     */
    public void setRound(RoomRound roundIn)
    {
        this.round = roundIn;
    }

    /**
     * Returns <code>true</code> if the argument is an RoundPlayerBullet instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    @Override
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof RoundPlayerBullet))
        {
            return false;
        }
        final RoundPlayerBullet that = (RoundPlayerBullet)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    @Override
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (this.id == null ? 0 : this.id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link RoundPlayerBullet}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link RoundPlayerBullet}.
         * @return new RoundPlayerBulletImpl()
         */
        public static RoundPlayerBullet newInstance()
        {
            return new RoundPlayerBulletImpl();
        }

        /**
         * Constructs a new instance of {@link RoundPlayerBullet}, taking all required and/or
         * read-only properties as arguments, except for identifiers.
         * @param pistolType PistolType
         * @param dateCreate Date
         * @param player Player
         * @param round RoomRound
         * @return newInstance
         */
        public static RoundPlayerBullet newInstance(PistolType pistolType, Date dateCreate, Player player, RoomRound round)
        {
            final RoundPlayerBullet entity = new RoundPlayerBulletImpl();
            entity.setPistolType(pistolType);
            entity.setDateCreate(dateCreate);
            entity.setPlayer(player);
            entity.setRound(round);
            return entity;
        }

        /**
         * Constructs a new instance of {@link RoundPlayerBullet}, taking all possible properties
         * (except the identifier(s))as arguments.
         * @param pistolType PistolType
         * @param b1 Boolean
         * @param b2 Boolean
         * @param b3 Boolean
         * @param b4 Boolean
         * @param b5 Boolean
         * @param b6 Boolean
         * @param b1broken Boolean
         * @param b2broken Boolean
         * @param b3broken Boolean
         * @param b4broken Boolean
         * @param b5broken Boolean
         * @param b6broken Boolean
         * @param b1armored Boolean
         * @param b2armored Boolean
         * @param b3armored Boolean
         * @param b4armored Boolean
         * @param b5armored Boolean
         * @param b6armored Boolean
         * @param dateCreate Date
         * @param player Player
         * @param round RoomRound
         * @return newInstance RoundPlayerBullet
         */
        public static RoundPlayerBullet newInstance(PistolType pistolType, Boolean b1, Boolean b2, Boolean b3, Boolean b4, Boolean b5, Boolean b6, Boolean b1broken, Boolean b2broken, Boolean b3broken, Boolean b4broken, Boolean b5broken, Boolean b6broken, Boolean b1armored, Boolean b2armored, Boolean b3armored, Boolean b4armored, Boolean b5armored, Boolean b6armored, Date dateCreate, Player player, RoomRound round)
        {
            final RoundPlayerBullet entity = new RoundPlayerBulletImpl();
            entity.setPistolType(pistolType);
            entity.setB1(b1);
            entity.setB2(b2);
            entity.setB3(b3);
            entity.setB4(b4);
            entity.setB5(b5);
            entity.setB6(b6);
            entity.setB1broken(b1broken);
            entity.setB2broken(b2broken);
            entity.setB3broken(b3broken);
            entity.setB4broken(b4broken);
            entity.setB5broken(b5broken);
            entity.setB6broken(b6broken);
            entity.setB1armored(b1armored);
            entity.setB2armored(b2armored);
            entity.setB3armored(b3armored);
            entity.setB4armored(b4armored);
            entity.setB5armored(b5armored);
            entity.setB6armored(b6armored);
            entity.setDateCreate(dateCreate);
            entity.setPlayer(player);
            entity.setRound(round);
            return entity;
        }
    }

    /**
     * @see Comparable#compareTo
     */
    public int compareTo(RoundPlayerBullet o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getPistolType() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getPistolType().compareTo(o.getPistolType()));
            }
            if (this.getB1() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB1().compareTo(o.getB1()));
            }
            if (this.getB2() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB2().compareTo(o.getB2()));
            }
            if (this.getB3() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB3().compareTo(o.getB3()));
            }
            if (this.getB4() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB4().compareTo(o.getB4()));
            }
            if (this.getB5() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB5().compareTo(o.getB5()));
            }
            if (this.getB6() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB6().compareTo(o.getB6()));
            }
            if (this.getB1broken() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB1broken().compareTo(o.getB1broken()));
            }
            if (this.getB2broken() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB2broken().compareTo(o.getB2broken()));
            }
            if (this.getB3broken() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB3broken().compareTo(o.getB3broken()));
            }
            if (this.getB4broken() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB4broken().compareTo(o.getB4broken()));
            }
            if (this.getB5broken() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB5broken().compareTo(o.getB5broken()));
            }
            if (this.getB6broken() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB6broken().compareTo(o.getB6broken()));
            }
            if (this.getB1armored() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB1armored().compareTo(o.getB1armored()));
            }
            if (this.getB2armored() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB2armored().compareTo(o.getB2armored()));
            }
            if (this.getB3armored() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB3armored().compareTo(o.getB3armored()));
            }
            if (this.getB4armored() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB4armored().compareTo(o.getB4armored()));
            }
            if (this.getB5armored() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB5armored().compareTo(o.getB5armored()));
            }
            if (this.getB6armored() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getB6armored().compareTo(o.getB6armored()));
            }
            if (this.getDateCreate() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getDateCreate().compareTo(o.getDateCreate()));
            }
        }
        return cmp;
    }
// HibernateEntity.vsl merge-point
}