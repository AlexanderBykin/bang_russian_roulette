// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageResponseTimeToStart.proto

package ProtoMessages;

public final class MessageResponseTimeToStartBase {
  private MessageResponseTimeToStartBase() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MessageResponseTimeToStartOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MessageResponseTimeToStart)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int64 roomId = 1 [default = 0];</code>
     */
    boolean hasRoomId();
    /**
     * <code>required int64 roomId = 1 [default = 0];</code>
     */
    long getRoomId();

    /**
     * <code>required int32 time = 2 [default = 0];</code>
     */
    boolean hasTime();
    /**
     * <code>required int32 time = 2 [default = 0];</code>
     */
    int getTime();

    /**
     * <code>required int32 currentRound = 3 [default = 1];</code>
     */
    boolean hasCurrentRound();
    /**
     * <code>required int32 currentRound = 3 [default = 1];</code>
     */
    int getCurrentRound();

    /**
     * <code>required bool isChooseDuelist = 4 [default = false];</code>
     */
    boolean hasIsChooseDuelist();
    /**
     * <code>required bool isChooseDuelist = 4 [default = false];</code>
     */
    boolean getIsChooseDuelist();

    /**
     * <code>required bool isDuel = 5 [default = false];</code>
     */
    boolean hasIsDuel();
    /**
     * <code>required bool isDuel = 5 [default = false];</code>
     */
    boolean getIsDuel();

    /**
     * <code>required .RoomShootDirection shootDirection = 6 [default = rsdLEFT];</code>
     */
    boolean hasShootDirection();
    /**
     * <code>required .RoomShootDirection shootDirection = 6 [default = rsdLEFT];</code>
     */
    ProtoMessages.RoomShootDirectionBase.RoomShootDirection getShootDirection();
  }
  /**
   * Protobuf type {@code MessageResponseTimeToStart}
   */
  public  static final class MessageResponseTimeToStart extends
      com.google.protobuf.GeneratedMessageLite<
          MessageResponseTimeToStart, MessageResponseTimeToStart.Builder> implements
      // @@protoc_insertion_point(message_implements:MessageResponseTimeToStart)
      MessageResponseTimeToStartOrBuilder {
    private MessageResponseTimeToStart() {
      currentRound_ = 1;
    }
    private int bitField0_;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private long roomId_;
    /**
     * <code>required int64 roomId = 1 [default = 0];</code>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 roomId = 1 [default = 0];</code>
     */
    public long getRoomId() {
      return roomId_;
    }
    /**
     * <code>required int64 roomId = 1 [default = 0];</code>
     */
    private void setRoomId(long value) {
      bitField0_ |= 0x00000001;
      roomId_ = value;
    }
    /**
     * <code>required int64 roomId = 1 [default = 0];</code>
     */
    private void clearRoomId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      roomId_ = 0L;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <code>required int32 time = 2 [default = 0];</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 time = 2 [default = 0];</code>
     */
    public int getTime() {
      return time_;
    }
    /**
     * <code>required int32 time = 2 [default = 0];</code>
     */
    private void setTime(int value) {
      bitField0_ |= 0x00000002;
      time_ = value;
    }
    /**
     * <code>required int32 time = 2 [default = 0];</code>
     */
    private void clearTime() {
      bitField0_ = (bitField0_ & ~0x00000002);
      time_ = 0;
    }

    public static final int CURRENTROUND_FIELD_NUMBER = 3;
    private int currentRound_;
    /**
     * <code>required int32 currentRound = 3 [default = 1];</code>
     */
    public boolean hasCurrentRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 currentRound = 3 [default = 1];</code>
     */
    public int getCurrentRound() {
      return currentRound_;
    }
    /**
     * <code>required int32 currentRound = 3 [default = 1];</code>
     */
    private void setCurrentRound(int value) {
      bitField0_ |= 0x00000004;
      currentRound_ = value;
    }
    /**
     * <code>required int32 currentRound = 3 [default = 1];</code>
     */
    private void clearCurrentRound() {
      bitField0_ = (bitField0_ & ~0x00000004);
      currentRound_ = 1;
    }

    public static final int ISCHOOSEDUELIST_FIELD_NUMBER = 4;
    private boolean isChooseDuelist_;
    /**
     * <code>required bool isChooseDuelist = 4 [default = false];</code>
     */
    public boolean hasIsChooseDuelist() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool isChooseDuelist = 4 [default = false];</code>
     */
    public boolean getIsChooseDuelist() {
      return isChooseDuelist_;
    }
    /**
     * <code>required bool isChooseDuelist = 4 [default = false];</code>
     */
    private void setIsChooseDuelist(boolean value) {
      bitField0_ |= 0x00000008;
      isChooseDuelist_ = value;
    }
    /**
     * <code>required bool isChooseDuelist = 4 [default = false];</code>
     */
    private void clearIsChooseDuelist() {
      bitField0_ = (bitField0_ & ~0x00000008);
      isChooseDuelist_ = false;
    }

    public static final int ISDUEL_FIELD_NUMBER = 5;
    private boolean isDuel_;
    /**
     * <code>required bool isDuel = 5 [default = false];</code>
     */
    public boolean hasIsDuel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bool isDuel = 5 [default = false];</code>
     */
    public boolean getIsDuel() {
      return isDuel_;
    }
    /**
     * <code>required bool isDuel = 5 [default = false];</code>
     */
    private void setIsDuel(boolean value) {
      bitField0_ |= 0x00000010;
      isDuel_ = value;
    }
    /**
     * <code>required bool isDuel = 5 [default = false];</code>
     */
    private void clearIsDuel() {
      bitField0_ = (bitField0_ & ~0x00000010);
      isDuel_ = false;
    }

    public static final int SHOOTDIRECTION_FIELD_NUMBER = 6;
    private int shootDirection_;
    /**
     * <code>required .RoomShootDirection shootDirection = 6 [default = rsdLEFT];</code>
     */
    public boolean hasShootDirection() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .RoomShootDirection shootDirection = 6 [default = rsdLEFT];</code>
     */
    public ProtoMessages.RoomShootDirectionBase.RoomShootDirection getShootDirection() {
      ProtoMessages.RoomShootDirectionBase.RoomShootDirection result = ProtoMessages.RoomShootDirectionBase.RoomShootDirection.forNumber(shootDirection_);
      return result == null ? ProtoMessages.RoomShootDirectionBase.RoomShootDirection.rsdLEFT : result;
    }
    /**
     * <code>required .RoomShootDirection shootDirection = 6 [default = rsdLEFT];</code>
     */
    private void setShootDirection(ProtoMessages.RoomShootDirectionBase.RoomShootDirection value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      shootDirection_ = value.getNumber();
    }
    /**
     * <code>required .RoomShootDirection shootDirection = 6 [default = rsdLEFT];</code>
     */
    private void clearShootDirection() {
      bitField0_ = (bitField0_ & ~0x00000020);
      shootDirection_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, time_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, currentRound_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, isChooseDuelist_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, isDuel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, shootDirection_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, time_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, currentRound_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isChooseDuelist_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isDuel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, shootDirection_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code MessageResponseTimeToStart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart, Builder> implements
        // @@protoc_insertion_point(builder_implements:MessageResponseTimeToStart)
        ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStartOrBuilder {
      // Construct using ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int64 roomId = 1 [default = 0];</code>
       */
      public boolean hasRoomId() {
        return instance.hasRoomId();
      }
      /**
       * <code>required int64 roomId = 1 [default = 0];</code>
       */
      public long getRoomId() {
        return instance.getRoomId();
      }
      /**
       * <code>required int64 roomId = 1 [default = 0];</code>
       */
      public Builder setRoomId(long value) {
        copyOnWrite();
        instance.setRoomId(value);
        return this;
      }
      /**
       * <code>required int64 roomId = 1 [default = 0];</code>
       */
      public Builder clearRoomId() {
        copyOnWrite();
        instance.clearRoomId();
        return this;
      }

      /**
       * <code>required int32 time = 2 [default = 0];</code>
       */
      public boolean hasTime() {
        return instance.hasTime();
      }
      /**
       * <code>required int32 time = 2 [default = 0];</code>
       */
      public int getTime() {
        return instance.getTime();
      }
      /**
       * <code>required int32 time = 2 [default = 0];</code>
       */
      public Builder setTime(int value) {
        copyOnWrite();
        instance.setTime(value);
        return this;
      }
      /**
       * <code>required int32 time = 2 [default = 0];</code>
       */
      public Builder clearTime() {
        copyOnWrite();
        instance.clearTime();
        return this;
      }

      /**
       * <code>required int32 currentRound = 3 [default = 1];</code>
       */
      public boolean hasCurrentRound() {
        return instance.hasCurrentRound();
      }
      /**
       * <code>required int32 currentRound = 3 [default = 1];</code>
       */
      public int getCurrentRound() {
        return instance.getCurrentRound();
      }
      /**
       * <code>required int32 currentRound = 3 [default = 1];</code>
       */
      public Builder setCurrentRound(int value) {
        copyOnWrite();
        instance.setCurrentRound(value);
        return this;
      }
      /**
       * <code>required int32 currentRound = 3 [default = 1];</code>
       */
      public Builder clearCurrentRound() {
        copyOnWrite();
        instance.clearCurrentRound();
        return this;
      }

      /**
       * <code>required bool isChooseDuelist = 4 [default = false];</code>
       */
      public boolean hasIsChooseDuelist() {
        return instance.hasIsChooseDuelist();
      }
      /**
       * <code>required bool isChooseDuelist = 4 [default = false];</code>
       */
      public boolean getIsChooseDuelist() {
        return instance.getIsChooseDuelist();
      }
      /**
       * <code>required bool isChooseDuelist = 4 [default = false];</code>
       */
      public Builder setIsChooseDuelist(boolean value) {
        copyOnWrite();
        instance.setIsChooseDuelist(value);
        return this;
      }
      /**
       * <code>required bool isChooseDuelist = 4 [default = false];</code>
       */
      public Builder clearIsChooseDuelist() {
        copyOnWrite();
        instance.clearIsChooseDuelist();
        return this;
      }

      /**
       * <code>required bool isDuel = 5 [default = false];</code>
       */
      public boolean hasIsDuel() {
        return instance.hasIsDuel();
      }
      /**
       * <code>required bool isDuel = 5 [default = false];</code>
       */
      public boolean getIsDuel() {
        return instance.getIsDuel();
      }
      /**
       * <code>required bool isDuel = 5 [default = false];</code>
       */
      public Builder setIsDuel(boolean value) {
        copyOnWrite();
        instance.setIsDuel(value);
        return this;
      }
      /**
       * <code>required bool isDuel = 5 [default = false];</code>
       */
      public Builder clearIsDuel() {
        copyOnWrite();
        instance.clearIsDuel();
        return this;
      }

      /**
       * <code>required .RoomShootDirection shootDirection = 6 [default = rsdLEFT];</code>
       */
      public boolean hasShootDirection() {
        return instance.hasShootDirection();
      }
      /**
       * <code>required .RoomShootDirection shootDirection = 6 [default = rsdLEFT];</code>
       */
      public ProtoMessages.RoomShootDirectionBase.RoomShootDirection getShootDirection() {
        return instance.getShootDirection();
      }
      /**
       * <code>required .RoomShootDirection shootDirection = 6 [default = rsdLEFT];</code>
       */
      public Builder setShootDirection(ProtoMessages.RoomShootDirectionBase.RoomShootDirection value) {
        copyOnWrite();
        instance.setShootDirection(value);
        return this;
      }
      /**
       * <code>required .RoomShootDirection shootDirection = 6 [default = rsdLEFT];</code>
       */
      public Builder clearShootDirection() {
        copyOnWrite();
        instance.clearShootDirection();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MessageResponseTimeToStart)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasRoomId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasTime()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCurrentRound()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasIsChooseDuelist()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasIsDuel()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasShootDirection()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart other = (ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart) arg1;
          roomId_ = visitor.visitLong(
              hasRoomId(), roomId_,
              other.hasRoomId(), other.roomId_);
          time_ = visitor.visitInt(
              hasTime(), time_,
              other.hasTime(), other.time_);
          currentRound_ = visitor.visitInt(
              hasCurrentRound(), currentRound_,
              other.hasCurrentRound(), other.currentRound_);
          isChooseDuelist_ = visitor.visitBoolean(
              hasIsChooseDuelist(), isChooseDuelist_,
              other.hasIsChooseDuelist(), other.isChooseDuelist_);
          isDuel_ = visitor.visitBoolean(
              hasIsDuel(), isDuel_,
              other.hasIsDuel(), other.isDuel_);
          shootDirection_ = visitor.visitInt(hasShootDirection(), shootDirection_,
              other.hasShootDirection(), other.shootDirection_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  roomId_ = input.readInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  time_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  currentRound_ = input.readInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  isChooseDuelist_ = input.readBool();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  isDuel_ = input.readBool();
                  break;
                }
                case 48: {
                  int rawValue = input.readEnum();
                  ProtoMessages.RoomShootDirectionBase.RoomShootDirection value = ProtoMessages.RoomShootDirectionBase.RoomShootDirection.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(6, rawValue);
                  } else {
                    bitField0_ |= 0x00000020;
                    shootDirection_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MessageResponseTimeToStart)
    private static final ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MessageResponseTimeToStart();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static ProtoMessages.MessageResponseTimeToStartBase.MessageResponseTimeToStart getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MessageResponseTimeToStart> PARSER;

    public static com.google.protobuf.Parser<MessageResponseTimeToStart> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
