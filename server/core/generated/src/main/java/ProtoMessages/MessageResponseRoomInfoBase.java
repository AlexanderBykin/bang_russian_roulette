// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageResponseRoomInfo.proto

package ProtoMessages;

public final class MessageResponseRoomInfoBase {
  private MessageResponseRoomInfoBase() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MessageResponseRoomInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MessageResponseRoomInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int64 roomId = 1 [default = 0];</code>
     */
    boolean hasRoomId();
    /**
     * <code>required int64 roomId = 1 [default = 0];</code>
     */
    long getRoomId();

    /**
     * <code>required int32 bet = 2 [default = 0];</code>
     */
    boolean hasBet();
    /**
     * <code>required int32 bet = 2 [default = 0];</code>
     */
    int getBet();

    /**
     * <code>required int32 amountPlayers = 4 [default = 0];</code>
     */
    boolean hasAmountPlayers();
    /**
     * <code>required int32 amountPlayers = 4 [default = 0];</code>
     */
    int getAmountPlayers();

    /**
     * <code>required int32 maxPlayers = 5 [default = 0];</code>
     */
    boolean hasMaxPlayers();
    /**
     * <code>required int32 maxPlayers = 5 [default = 0];</code>
     */
    int getMaxPlayers();

    /**
     * <code>required int32 currentRound = 6 [default = 0];</code>
     */
    boolean hasCurrentRound();
    /**
     * <code>required int32 currentRound = 6 [default = 0];</code>
     */
    int getCurrentRound();

    /**
     * <code>required int32 maxRounds = 7 [default = 0];</code>
     */
    boolean hasMaxRounds();
    /**
     * <code>required int32 maxRounds = 7 [default = 0];</code>
     */
    int getMaxRounds();

    /**
     * <code>required int64 playerbank = 8 [default = 0];</code>
     */
    boolean hasPlayerbank();
    /**
     * <code>required int64 playerbank = 8 [default = 0];</code>
     */
    long getPlayerbank();

    /**
     * <code>required int64 investorbank = 9 [default = 0];</code>
     */
    boolean hasInvestorbank();
    /**
     * <code>required int64 investorbank = 9 [default = 0];</code>
     */
    long getInvestorbank();

    /**
     * <code>required bool isGameStarted = 10 [default = false];</code>
     */
    boolean hasIsGameStarted();
    /**
     * <code>required bool isGameStarted = 10 [default = false];</code>
     */
    boolean getIsGameStarted();

    /**
     * <code>required .RoomShootDirection shootDirection = 11 [default = rsdLEFT];</code>
     */
    boolean hasShootDirection();
    /**
     * <code>required .RoomShootDirection shootDirection = 11 [default = rsdLEFT];</code>
     */
    ProtoMessages.RoomShootDirectionBase.RoomShootDirection getShootDirection();
  }
  /**
   * Protobuf type {@code MessageResponseRoomInfo}
   */
  public  static final class MessageResponseRoomInfo extends
      com.google.protobuf.GeneratedMessageLite<
          MessageResponseRoomInfo, MessageResponseRoomInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:MessageResponseRoomInfo)
      MessageResponseRoomInfoOrBuilder {
    private MessageResponseRoomInfo() {
    }
    private int bitField0_;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private long roomId_;
    /**
     * <code>required int64 roomId = 1 [default = 0];</code>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 roomId = 1 [default = 0];</code>
     */
    public long getRoomId() {
      return roomId_;
    }
    /**
     * <code>required int64 roomId = 1 [default = 0];</code>
     */
    private void setRoomId(long value) {
      bitField0_ |= 0x00000001;
      roomId_ = value;
    }
    /**
     * <code>required int64 roomId = 1 [default = 0];</code>
     */
    private void clearRoomId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      roomId_ = 0L;
    }

    public static final int BET_FIELD_NUMBER = 2;
    private int bet_;
    /**
     * <code>required int32 bet = 2 [default = 0];</code>
     */
    public boolean hasBet() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 bet = 2 [default = 0];</code>
     */
    public int getBet() {
      return bet_;
    }
    /**
     * <code>required int32 bet = 2 [default = 0];</code>
     */
    private void setBet(int value) {
      bitField0_ |= 0x00000002;
      bet_ = value;
    }
    /**
     * <code>required int32 bet = 2 [default = 0];</code>
     */
    private void clearBet() {
      bitField0_ = (bitField0_ & ~0x00000002);
      bet_ = 0;
    }

    public static final int AMOUNTPLAYERS_FIELD_NUMBER = 4;
    private int amountPlayers_;
    /**
     * <code>required int32 amountPlayers = 4 [default = 0];</code>
     */
    public boolean hasAmountPlayers() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 amountPlayers = 4 [default = 0];</code>
     */
    public int getAmountPlayers() {
      return amountPlayers_;
    }
    /**
     * <code>required int32 amountPlayers = 4 [default = 0];</code>
     */
    private void setAmountPlayers(int value) {
      bitField0_ |= 0x00000004;
      amountPlayers_ = value;
    }
    /**
     * <code>required int32 amountPlayers = 4 [default = 0];</code>
     */
    private void clearAmountPlayers() {
      bitField0_ = (bitField0_ & ~0x00000004);
      amountPlayers_ = 0;
    }

    public static final int MAXPLAYERS_FIELD_NUMBER = 5;
    private int maxPlayers_;
    /**
     * <code>required int32 maxPlayers = 5 [default = 0];</code>
     */
    public boolean hasMaxPlayers() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 maxPlayers = 5 [default = 0];</code>
     */
    public int getMaxPlayers() {
      return maxPlayers_;
    }
    /**
     * <code>required int32 maxPlayers = 5 [default = 0];</code>
     */
    private void setMaxPlayers(int value) {
      bitField0_ |= 0x00000008;
      maxPlayers_ = value;
    }
    /**
     * <code>required int32 maxPlayers = 5 [default = 0];</code>
     */
    private void clearMaxPlayers() {
      bitField0_ = (bitField0_ & ~0x00000008);
      maxPlayers_ = 0;
    }

    public static final int CURRENTROUND_FIELD_NUMBER = 6;
    private int currentRound_;
    /**
     * <code>required int32 currentRound = 6 [default = 0];</code>
     */
    public boolean hasCurrentRound() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 currentRound = 6 [default = 0];</code>
     */
    public int getCurrentRound() {
      return currentRound_;
    }
    /**
     * <code>required int32 currentRound = 6 [default = 0];</code>
     */
    private void setCurrentRound(int value) {
      bitField0_ |= 0x00000010;
      currentRound_ = value;
    }
    /**
     * <code>required int32 currentRound = 6 [default = 0];</code>
     */
    private void clearCurrentRound() {
      bitField0_ = (bitField0_ & ~0x00000010);
      currentRound_ = 0;
    }

    public static final int MAXROUNDS_FIELD_NUMBER = 7;
    private int maxRounds_;
    /**
     * <code>required int32 maxRounds = 7 [default = 0];</code>
     */
    public boolean hasMaxRounds() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 maxRounds = 7 [default = 0];</code>
     */
    public int getMaxRounds() {
      return maxRounds_;
    }
    /**
     * <code>required int32 maxRounds = 7 [default = 0];</code>
     */
    private void setMaxRounds(int value) {
      bitField0_ |= 0x00000020;
      maxRounds_ = value;
    }
    /**
     * <code>required int32 maxRounds = 7 [default = 0];</code>
     */
    private void clearMaxRounds() {
      bitField0_ = (bitField0_ & ~0x00000020);
      maxRounds_ = 0;
    }

    public static final int PLAYERBANK_FIELD_NUMBER = 8;
    private long playerbank_;
    /**
     * <code>required int64 playerbank = 8 [default = 0];</code>
     */
    public boolean hasPlayerbank() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int64 playerbank = 8 [default = 0];</code>
     */
    public long getPlayerbank() {
      return playerbank_;
    }
    /**
     * <code>required int64 playerbank = 8 [default = 0];</code>
     */
    private void setPlayerbank(long value) {
      bitField0_ |= 0x00000040;
      playerbank_ = value;
    }
    /**
     * <code>required int64 playerbank = 8 [default = 0];</code>
     */
    private void clearPlayerbank() {
      bitField0_ = (bitField0_ & ~0x00000040);
      playerbank_ = 0L;
    }

    public static final int INVESTORBANK_FIELD_NUMBER = 9;
    private long investorbank_;
    /**
     * <code>required int64 investorbank = 9 [default = 0];</code>
     */
    public boolean hasInvestorbank() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int64 investorbank = 9 [default = 0];</code>
     */
    public long getInvestorbank() {
      return investorbank_;
    }
    /**
     * <code>required int64 investorbank = 9 [default = 0];</code>
     */
    private void setInvestorbank(long value) {
      bitField0_ |= 0x00000080;
      investorbank_ = value;
    }
    /**
     * <code>required int64 investorbank = 9 [default = 0];</code>
     */
    private void clearInvestorbank() {
      bitField0_ = (bitField0_ & ~0x00000080);
      investorbank_ = 0L;
    }

    public static final int ISGAMESTARTED_FIELD_NUMBER = 10;
    private boolean isGameStarted_;
    /**
     * <code>required bool isGameStarted = 10 [default = false];</code>
     */
    public boolean hasIsGameStarted() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required bool isGameStarted = 10 [default = false];</code>
     */
    public boolean getIsGameStarted() {
      return isGameStarted_;
    }
    /**
     * <code>required bool isGameStarted = 10 [default = false];</code>
     */
    private void setIsGameStarted(boolean value) {
      bitField0_ |= 0x00000100;
      isGameStarted_ = value;
    }
    /**
     * <code>required bool isGameStarted = 10 [default = false];</code>
     */
    private void clearIsGameStarted() {
      bitField0_ = (bitField0_ & ~0x00000100);
      isGameStarted_ = false;
    }

    public static final int SHOOTDIRECTION_FIELD_NUMBER = 11;
    private int shootDirection_;
    /**
     * <code>required .RoomShootDirection shootDirection = 11 [default = rsdLEFT];</code>
     */
    public boolean hasShootDirection() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required .RoomShootDirection shootDirection = 11 [default = rsdLEFT];</code>
     */
    public ProtoMessages.RoomShootDirectionBase.RoomShootDirection getShootDirection() {
      ProtoMessages.RoomShootDirectionBase.RoomShootDirection result = ProtoMessages.RoomShootDirectionBase.RoomShootDirection.forNumber(shootDirection_);
      return result == null ? ProtoMessages.RoomShootDirectionBase.RoomShootDirection.rsdLEFT : result;
    }
    /**
     * <code>required .RoomShootDirection shootDirection = 11 [default = rsdLEFT];</code>
     */
    private void setShootDirection(ProtoMessages.RoomShootDirectionBase.RoomShootDirection value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000200;
      shootDirection_ = value.getNumber();
    }
    /**
     * <code>required .RoomShootDirection shootDirection = 11 [default = rsdLEFT];</code>
     */
    private void clearShootDirection() {
      bitField0_ = (bitField0_ & ~0x00000200);
      shootDirection_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, bet_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, amountPlayers_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, maxPlayers_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, currentRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, maxRounds_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(8, playerbank_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(9, investorbank_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(10, isGameStarted_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(11, shootDirection_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bet_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, amountPlayers_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxPlayers_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, currentRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, maxRounds_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, playerbank_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, investorbank_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, isGameStarted_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, shootDirection_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code MessageResponseRoomInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:MessageResponseRoomInfo)
        ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfoOrBuilder {
      // Construct using ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int64 roomId = 1 [default = 0];</code>
       */
      public boolean hasRoomId() {
        return instance.hasRoomId();
      }
      /**
       * <code>required int64 roomId = 1 [default = 0];</code>
       */
      public long getRoomId() {
        return instance.getRoomId();
      }
      /**
       * <code>required int64 roomId = 1 [default = 0];</code>
       */
      public Builder setRoomId(long value) {
        copyOnWrite();
        instance.setRoomId(value);
        return this;
      }
      /**
       * <code>required int64 roomId = 1 [default = 0];</code>
       */
      public Builder clearRoomId() {
        copyOnWrite();
        instance.clearRoomId();
        return this;
      }

      /**
       * <code>required int32 bet = 2 [default = 0];</code>
       */
      public boolean hasBet() {
        return instance.hasBet();
      }
      /**
       * <code>required int32 bet = 2 [default = 0];</code>
       */
      public int getBet() {
        return instance.getBet();
      }
      /**
       * <code>required int32 bet = 2 [default = 0];</code>
       */
      public Builder setBet(int value) {
        copyOnWrite();
        instance.setBet(value);
        return this;
      }
      /**
       * <code>required int32 bet = 2 [default = 0];</code>
       */
      public Builder clearBet() {
        copyOnWrite();
        instance.clearBet();
        return this;
      }

      /**
       * <code>required int32 amountPlayers = 4 [default = 0];</code>
       */
      public boolean hasAmountPlayers() {
        return instance.hasAmountPlayers();
      }
      /**
       * <code>required int32 amountPlayers = 4 [default = 0];</code>
       */
      public int getAmountPlayers() {
        return instance.getAmountPlayers();
      }
      /**
       * <code>required int32 amountPlayers = 4 [default = 0];</code>
       */
      public Builder setAmountPlayers(int value) {
        copyOnWrite();
        instance.setAmountPlayers(value);
        return this;
      }
      /**
       * <code>required int32 amountPlayers = 4 [default = 0];</code>
       */
      public Builder clearAmountPlayers() {
        copyOnWrite();
        instance.clearAmountPlayers();
        return this;
      }

      /**
       * <code>required int32 maxPlayers = 5 [default = 0];</code>
       */
      public boolean hasMaxPlayers() {
        return instance.hasMaxPlayers();
      }
      /**
       * <code>required int32 maxPlayers = 5 [default = 0];</code>
       */
      public int getMaxPlayers() {
        return instance.getMaxPlayers();
      }
      /**
       * <code>required int32 maxPlayers = 5 [default = 0];</code>
       */
      public Builder setMaxPlayers(int value) {
        copyOnWrite();
        instance.setMaxPlayers(value);
        return this;
      }
      /**
       * <code>required int32 maxPlayers = 5 [default = 0];</code>
       */
      public Builder clearMaxPlayers() {
        copyOnWrite();
        instance.clearMaxPlayers();
        return this;
      }

      /**
       * <code>required int32 currentRound = 6 [default = 0];</code>
       */
      public boolean hasCurrentRound() {
        return instance.hasCurrentRound();
      }
      /**
       * <code>required int32 currentRound = 6 [default = 0];</code>
       */
      public int getCurrentRound() {
        return instance.getCurrentRound();
      }
      /**
       * <code>required int32 currentRound = 6 [default = 0];</code>
       */
      public Builder setCurrentRound(int value) {
        copyOnWrite();
        instance.setCurrentRound(value);
        return this;
      }
      /**
       * <code>required int32 currentRound = 6 [default = 0];</code>
       */
      public Builder clearCurrentRound() {
        copyOnWrite();
        instance.clearCurrentRound();
        return this;
      }

      /**
       * <code>required int32 maxRounds = 7 [default = 0];</code>
       */
      public boolean hasMaxRounds() {
        return instance.hasMaxRounds();
      }
      /**
       * <code>required int32 maxRounds = 7 [default = 0];</code>
       */
      public int getMaxRounds() {
        return instance.getMaxRounds();
      }
      /**
       * <code>required int32 maxRounds = 7 [default = 0];</code>
       */
      public Builder setMaxRounds(int value) {
        copyOnWrite();
        instance.setMaxRounds(value);
        return this;
      }
      /**
       * <code>required int32 maxRounds = 7 [default = 0];</code>
       */
      public Builder clearMaxRounds() {
        copyOnWrite();
        instance.clearMaxRounds();
        return this;
      }

      /**
       * <code>required int64 playerbank = 8 [default = 0];</code>
       */
      public boolean hasPlayerbank() {
        return instance.hasPlayerbank();
      }
      /**
       * <code>required int64 playerbank = 8 [default = 0];</code>
       */
      public long getPlayerbank() {
        return instance.getPlayerbank();
      }
      /**
       * <code>required int64 playerbank = 8 [default = 0];</code>
       */
      public Builder setPlayerbank(long value) {
        copyOnWrite();
        instance.setPlayerbank(value);
        return this;
      }
      /**
       * <code>required int64 playerbank = 8 [default = 0];</code>
       */
      public Builder clearPlayerbank() {
        copyOnWrite();
        instance.clearPlayerbank();
        return this;
      }

      /**
       * <code>required int64 investorbank = 9 [default = 0];</code>
       */
      public boolean hasInvestorbank() {
        return instance.hasInvestorbank();
      }
      /**
       * <code>required int64 investorbank = 9 [default = 0];</code>
       */
      public long getInvestorbank() {
        return instance.getInvestorbank();
      }
      /**
       * <code>required int64 investorbank = 9 [default = 0];</code>
       */
      public Builder setInvestorbank(long value) {
        copyOnWrite();
        instance.setInvestorbank(value);
        return this;
      }
      /**
       * <code>required int64 investorbank = 9 [default = 0];</code>
       */
      public Builder clearInvestorbank() {
        copyOnWrite();
        instance.clearInvestorbank();
        return this;
      }

      /**
       * <code>required bool isGameStarted = 10 [default = false];</code>
       */
      public boolean hasIsGameStarted() {
        return instance.hasIsGameStarted();
      }
      /**
       * <code>required bool isGameStarted = 10 [default = false];</code>
       */
      public boolean getIsGameStarted() {
        return instance.getIsGameStarted();
      }
      /**
       * <code>required bool isGameStarted = 10 [default = false];</code>
       */
      public Builder setIsGameStarted(boolean value) {
        copyOnWrite();
        instance.setIsGameStarted(value);
        return this;
      }
      /**
       * <code>required bool isGameStarted = 10 [default = false];</code>
       */
      public Builder clearIsGameStarted() {
        copyOnWrite();
        instance.clearIsGameStarted();
        return this;
      }

      /**
       * <code>required .RoomShootDirection shootDirection = 11 [default = rsdLEFT];</code>
       */
      public boolean hasShootDirection() {
        return instance.hasShootDirection();
      }
      /**
       * <code>required .RoomShootDirection shootDirection = 11 [default = rsdLEFT];</code>
       */
      public ProtoMessages.RoomShootDirectionBase.RoomShootDirection getShootDirection() {
        return instance.getShootDirection();
      }
      /**
       * <code>required .RoomShootDirection shootDirection = 11 [default = rsdLEFT];</code>
       */
      public Builder setShootDirection(ProtoMessages.RoomShootDirectionBase.RoomShootDirection value) {
        copyOnWrite();
        instance.setShootDirection(value);
        return this;
      }
      /**
       * <code>required .RoomShootDirection shootDirection = 11 [default = rsdLEFT];</code>
       */
      public Builder clearShootDirection() {
        copyOnWrite();
        instance.clearShootDirection();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MessageResponseRoomInfo)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasRoomId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasBet()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAmountPlayers()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasMaxPlayers()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasCurrentRound()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasMaxRounds()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPlayerbank()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasInvestorbank()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasIsGameStarted()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasShootDirection()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo other = (ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo) arg1;
          roomId_ = visitor.visitLong(
              hasRoomId(), roomId_,
              other.hasRoomId(), other.roomId_);
          bet_ = visitor.visitInt(
              hasBet(), bet_,
              other.hasBet(), other.bet_);
          amountPlayers_ = visitor.visitInt(
              hasAmountPlayers(), amountPlayers_,
              other.hasAmountPlayers(), other.amountPlayers_);
          maxPlayers_ = visitor.visitInt(
              hasMaxPlayers(), maxPlayers_,
              other.hasMaxPlayers(), other.maxPlayers_);
          currentRound_ = visitor.visitInt(
              hasCurrentRound(), currentRound_,
              other.hasCurrentRound(), other.currentRound_);
          maxRounds_ = visitor.visitInt(
              hasMaxRounds(), maxRounds_,
              other.hasMaxRounds(), other.maxRounds_);
          playerbank_ = visitor.visitLong(
              hasPlayerbank(), playerbank_,
              other.hasPlayerbank(), other.playerbank_);
          investorbank_ = visitor.visitLong(
              hasInvestorbank(), investorbank_,
              other.hasInvestorbank(), other.investorbank_);
          isGameStarted_ = visitor.visitBoolean(
              hasIsGameStarted(), isGameStarted_,
              other.hasIsGameStarted(), other.isGameStarted_);
          shootDirection_ = visitor.visitInt(hasShootDirection(), shootDirection_,
              other.hasShootDirection(), other.shootDirection_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  roomId_ = input.readInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  bet_ = input.readInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000004;
                  amountPlayers_ = input.readInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000008;
                  maxPlayers_ = input.readInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000010;
                  currentRound_ = input.readInt32();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000020;
                  maxRounds_ = input.readInt32();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000040;
                  playerbank_ = input.readInt64();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000080;
                  investorbank_ = input.readInt64();
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000100;
                  isGameStarted_ = input.readBool();
                  break;
                }
                case 88: {
                  int rawValue = input.readEnum();
                  ProtoMessages.RoomShootDirectionBase.RoomShootDirection value = ProtoMessages.RoomShootDirectionBase.RoomShootDirection.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(11, rawValue);
                  } else {
                    bitField0_ |= 0x00000200;
                    shootDirection_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MessageResponseRoomInfo)
    private static final ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MessageResponseRoomInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static ProtoMessages.MessageResponseRoomInfoBase.MessageResponseRoomInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MessageResponseRoomInfo> PARSER;

    public static com.google.protobuf.Parser<MessageResponseRoomInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
