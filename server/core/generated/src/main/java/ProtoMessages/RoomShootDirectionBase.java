// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomShootDirection.proto

package ProtoMessages;

public final class RoomShootDirectionBase {
  private RoomShootDirectionBase() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code RoomShootDirection}
   */
  public enum RoomShootDirection
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>rsdLEFT = 0;</code>
     */
    rsdLEFT(0),
    /**
     * <code>rsdRIGHT = 1;</code>
     */
    rsdRIGHT(1),
    ;

    /**
     * <code>rsdLEFT = 0;</code>
     */
    public static final int rsdLEFT_VALUE = 0;
    /**
     * <code>rsdRIGHT = 1;</code>
     */
    public static final int rsdRIGHT_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RoomShootDirection valueOf(int value) {
      return forNumber(value);
    }

    public static RoomShootDirection forNumber(int value) {
      switch (value) {
        case 0: return rsdLEFT;
        case 1: return rsdRIGHT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoomShootDirection>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RoomShootDirection> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoomShootDirection>() {
            public RoomShootDirection findValueByNumber(int number) {
              return RoomShootDirection.forNumber(number);
            }
          };

    private final int value;

    private RoomShootDirection(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RoomShootDirection)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
