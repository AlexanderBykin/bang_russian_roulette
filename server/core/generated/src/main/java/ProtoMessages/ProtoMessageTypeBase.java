// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoMessageType.proto

package ProtoMessages;

public final class ProtoMessageTypeBase {
  private ProtoMessageTypeBase() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code eProtoMessageType}
   */
  public enum eProtoMessageType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>cmtNone = 0;</code>
     */
    cmtNone(0),
    /**
     * <pre>
     * проверка версии протокола между клиентом и сервером
     * </pre>
     *
     * <code>cmtCheckAPIVersion = 1;</code>
     */
    cmtCheckAPIVersion(1),
    /**
     * <pre>
     * авторизоваться на сервере
     * </pre>
     *
     * <code>cmtAuth = 2;</code>
     */
    cmtAuth(2),
    /**
     * <pre>
     * нужна авторизация
     * </pre>
     *
     * <code>cmtNeedAuth = 3;</code>
     */
    cmtNeedAuth(3),
    /**
     * <pre>
     * изменить настройки игры
     * </pre>
     *
     * <code>cmtUpdateSettings = 4;</code>
     */
    cmtUpdateSettings(4),
    /**
     * <pre>
     * обновить аватарку
     * </pre>
     *
     * <code>cmtUpdateAvatar = 5;</code>
     */
    cmtUpdateAvatar(5),
    /**
     * <pre>
     * получить список комнат в указанной категории
     * </pre>
     *
     * <code>cmtGetRoomList = 6;</code>
     */
    cmtGetRoomList(6),
    /**
     * <code>cmtRoomPlayerInit = 7;</code>
     */
    cmtRoomPlayerInit(7),
    /**
     * <pre>
     * получить список игроков комнаты
     * </pre>
     *
     * <code>cmtGetRoomPlayers = 8;</code>
     */
    cmtGetRoomPlayers(8),
    /**
     * <pre>
     * показать результаты игры комнаты за раунд
     * </pre>
     *
     * <code>cmtRoomResults = 9;</code>
     */
    cmtRoomResults(9),
    /**
     * <pre>
     * поместить патроны в барабан
     * </pre>
     *
     * <code>cmtSetPistolBullets = 10;</code>
     */
    cmtSetPistolBullets(10),
    /**
     * <pre>
     * посадить игрока на указанное место в комнате
     * </pre>
     *
     * <code>cmtSetPlayerTypeAndPosition = 11;</code>
     */
    cmtSetPlayerTypeAndPosition(11),
    /**
     * <code>cmtRoomPlayerExit = 12;</code>
     */
    cmtRoomPlayerExit(12),
    /**
     * <pre>
     * вращать барабан с патронами
     * </pre>
     *
     * <code>cmtRotateDrum = 13;</code>
     */
    cmtRotateDrum(13),
    /**
     * <pre>
     * сделать выстрел
     * </pre>
     *
     * <code>cmtBang = 14;</code>
     */
    cmtBang(14),
    /**
     * <pre>
     * показать время до старта раунда в комнате
     * </pre>
     *
     * <code>cmtTimeToStart = 15;</code>
     */
    cmtTimeToStart(15),
    /**
     * <pre>
     * показать время до окончания раунда в комнате
     * </pre>
     *
     * <code>cmtTimeToEnd = 16;</code>
     */
    cmtTimeToEnd(16),
    /**
     * <pre>
     * показать окно вставки патронов для игрока
     * </pre>
     *
     * <code>cmtTimeToPutBullets = 17;</code>
     */
    cmtTimeToPutBullets(17),
    /**
     * <pre>
     * показать кнопку вращения барабана, время и сообщение игроку для вращения
     * </pre>
     *
     * <code>cmtTimeToRotateDrum = 18;</code>
     */
    cmtTimeToRotateDrum(18),
    /**
     * <pre>
     * показать лампу, оставшееся время и кнопку стрелять для     cmtRoomExit(18), // игрок выходит из комнаты
     * </pre>
     *
     * <code>cmtTimeToShoot = 19;</code>
     */
    cmtTimeToShoot(19),
    /**
     * <pre>
     * игрок выходит из комнаты
     * </pre>
     *
     * <code>cmtRoomExit = 20;</code>
     */
    cmtRoomExit(20),
    /**
     * <pre>
     * получить продаваемые вещи Магазина по виду (Коллекции, Вещи, Деньги)
     * </pre>
     *
     * <code>cmtGetShopItems = 21;</code>
     */
    cmtGetShopItems(21),
    /**
     * <pre>
     * использовать вещь игрока на другом игроке в комнате
     * </pre>
     *
     * <code>cmtUsePlayerInventoryItem = 22;</code>
     */
    cmtUsePlayerInventoryItem(22),
    /**
     * <pre>
     * получить информацию о комнате Ид комнаты, мин/макс ставка, макс игроков, стартовала игра или нет
     * </pre>
     *
     * <code>cmtGetRoomInfo = 23;</code>
     */
    cmtGetRoomInfo(23),
    /**
     * <pre>
     * получить деньги для игрока
     * </pre>
     *
     * <code>cmtGetMoney = 24;</code>
     */
    cmtGetMoney(24),
    /**
     * <pre>
     * купить вещь в магазине
     * </pre>
     *
     * <code>cmtBuyShopItem = 25;</code>
     */
    cmtBuyShopItem(25),
    /**
     * <pre>
     * сделать ставку на игрока
     * </pre>
     *
     * <code>cmtPlayerBet = 26;</code>
     */
    cmtPlayerBet(26),
    /**
     * <pre>
     * получить список игроков + выбранных дуэлянтов
     * </pre>
     *
     * <code>cmtGetRoomPlayersDuelist = 27;</code>
     */
    cmtGetRoomPlayersDuelist(27),
    /**
     * <pre>
     * игрок выбрал позицию в диалоге выбора дуэлянтов
     * </pre>
     *
     * <code>cmtSetPlayerDuelist = 28;</code>
     */
    cmtSetPlayerDuelist(28),
    /**
     * <pre>
     * у игрока нету денег для участия в игре
     * </pre>
     *
     * <code>cmtNoMoney = 29;</code>
     */
    cmtNoMoney(29),
    /**
     * <pre>
     * информация об игроке
     * </pre>
     *
     * <code>cmtGetPlayerInfo = 30;</code>
     */
    cmtGetPlayerInfo(30),
    /**
     * <pre>
     * просмотр рекламы и награждение
     * </pre>
     *
     * <code>cmtWatchAd = 31;</code>
     */
    cmtWatchAd(31),
    /**
     * <pre>
     * профиль игрока
     * </pre>
     *
     * <code>cmtGetPlayerProfile = 32;</code>
     */
    cmtGetPlayerProfile(32),
    /**
     * <pre>
     * обновить профиль игрока
     * </pre>
     *
     * <code>cmtUpdatePlayerProfile = 33;</code>
     */
    cmtUpdatePlayerProfile(33),
    /**
     * <pre>
     * регистрация игрока
     * </pre>
     *
     * <code>cmtRegister = 34;</code>
     */
    cmtRegister(34),
    /**
     * <pre>
     * игрок забыл пароль
     * </pre>
     *
     * <code>cmtForgotPassword = 35;</code>
     */
    cmtForgotPassword(35),
    /**
     * <code>cmtPing = 100;</code>
     */
    cmtPing(100),
    /**
     * <pre>
     * пинги
     * </pre>
     *
     * <code>cmtPong = 101;</code>
     */
    cmtPong(101),
    ;

    /**
     * <code>cmtNone = 0;</code>
     */
    public static final int cmtNone_VALUE = 0;
    /**
     * <pre>
     * проверка версии протокола между клиентом и сервером
     * </pre>
     *
     * <code>cmtCheckAPIVersion = 1;</code>
     */
    public static final int cmtCheckAPIVersion_VALUE = 1;
    /**
     * <pre>
     * авторизоваться на сервере
     * </pre>
     *
     * <code>cmtAuth = 2;</code>
     */
    public static final int cmtAuth_VALUE = 2;
    /**
     * <pre>
     * нужна авторизация
     * </pre>
     *
     * <code>cmtNeedAuth = 3;</code>
     */
    public static final int cmtNeedAuth_VALUE = 3;
    /**
     * <pre>
     * изменить настройки игры
     * </pre>
     *
     * <code>cmtUpdateSettings = 4;</code>
     */
    public static final int cmtUpdateSettings_VALUE = 4;
    /**
     * <pre>
     * обновить аватарку
     * </pre>
     *
     * <code>cmtUpdateAvatar = 5;</code>
     */
    public static final int cmtUpdateAvatar_VALUE = 5;
    /**
     * <pre>
     * получить список комнат в указанной категории
     * </pre>
     *
     * <code>cmtGetRoomList = 6;</code>
     */
    public static final int cmtGetRoomList_VALUE = 6;
    /**
     * <code>cmtRoomPlayerInit = 7;</code>
     */
    public static final int cmtRoomPlayerInit_VALUE = 7;
    /**
     * <pre>
     * получить список игроков комнаты
     * </pre>
     *
     * <code>cmtGetRoomPlayers = 8;</code>
     */
    public static final int cmtGetRoomPlayers_VALUE = 8;
    /**
     * <pre>
     * показать результаты игры комнаты за раунд
     * </pre>
     *
     * <code>cmtRoomResults = 9;</code>
     */
    public static final int cmtRoomResults_VALUE = 9;
    /**
     * <pre>
     * поместить патроны в барабан
     * </pre>
     *
     * <code>cmtSetPistolBullets = 10;</code>
     */
    public static final int cmtSetPistolBullets_VALUE = 10;
    /**
     * <pre>
     * посадить игрока на указанное место в комнате
     * </pre>
     *
     * <code>cmtSetPlayerTypeAndPosition = 11;</code>
     */
    public static final int cmtSetPlayerTypeAndPosition_VALUE = 11;
    /**
     * <code>cmtRoomPlayerExit = 12;</code>
     */
    public static final int cmtRoomPlayerExit_VALUE = 12;
    /**
     * <pre>
     * вращать барабан с патронами
     * </pre>
     *
     * <code>cmtRotateDrum = 13;</code>
     */
    public static final int cmtRotateDrum_VALUE = 13;
    /**
     * <pre>
     * сделать выстрел
     * </pre>
     *
     * <code>cmtBang = 14;</code>
     */
    public static final int cmtBang_VALUE = 14;
    /**
     * <pre>
     * показать время до старта раунда в комнате
     * </pre>
     *
     * <code>cmtTimeToStart = 15;</code>
     */
    public static final int cmtTimeToStart_VALUE = 15;
    /**
     * <pre>
     * показать время до окончания раунда в комнате
     * </pre>
     *
     * <code>cmtTimeToEnd = 16;</code>
     */
    public static final int cmtTimeToEnd_VALUE = 16;
    /**
     * <pre>
     * показать окно вставки патронов для игрока
     * </pre>
     *
     * <code>cmtTimeToPutBullets = 17;</code>
     */
    public static final int cmtTimeToPutBullets_VALUE = 17;
    /**
     * <pre>
     * показать кнопку вращения барабана, время и сообщение игроку для вращения
     * </pre>
     *
     * <code>cmtTimeToRotateDrum = 18;</code>
     */
    public static final int cmtTimeToRotateDrum_VALUE = 18;
    /**
     * <pre>
     * показать лампу, оставшееся время и кнопку стрелять для     cmtRoomExit(18), // игрок выходит из комнаты
     * </pre>
     *
     * <code>cmtTimeToShoot = 19;</code>
     */
    public static final int cmtTimeToShoot_VALUE = 19;
    /**
     * <pre>
     * игрок выходит из комнаты
     * </pre>
     *
     * <code>cmtRoomExit = 20;</code>
     */
    public static final int cmtRoomExit_VALUE = 20;
    /**
     * <pre>
     * получить продаваемые вещи Магазина по виду (Коллекции, Вещи, Деньги)
     * </pre>
     *
     * <code>cmtGetShopItems = 21;</code>
     */
    public static final int cmtGetShopItems_VALUE = 21;
    /**
     * <pre>
     * использовать вещь игрока на другом игроке в комнате
     * </pre>
     *
     * <code>cmtUsePlayerInventoryItem = 22;</code>
     */
    public static final int cmtUsePlayerInventoryItem_VALUE = 22;
    /**
     * <pre>
     * получить информацию о комнате Ид комнаты, мин/макс ставка, макс игроков, стартовала игра или нет
     * </pre>
     *
     * <code>cmtGetRoomInfo = 23;</code>
     */
    public static final int cmtGetRoomInfo_VALUE = 23;
    /**
     * <pre>
     * получить деньги для игрока
     * </pre>
     *
     * <code>cmtGetMoney = 24;</code>
     */
    public static final int cmtGetMoney_VALUE = 24;
    /**
     * <pre>
     * купить вещь в магазине
     * </pre>
     *
     * <code>cmtBuyShopItem = 25;</code>
     */
    public static final int cmtBuyShopItem_VALUE = 25;
    /**
     * <pre>
     * сделать ставку на игрока
     * </pre>
     *
     * <code>cmtPlayerBet = 26;</code>
     */
    public static final int cmtPlayerBet_VALUE = 26;
    /**
     * <pre>
     * получить список игроков + выбранных дуэлянтов
     * </pre>
     *
     * <code>cmtGetRoomPlayersDuelist = 27;</code>
     */
    public static final int cmtGetRoomPlayersDuelist_VALUE = 27;
    /**
     * <pre>
     * игрок выбрал позицию в диалоге выбора дуэлянтов
     * </pre>
     *
     * <code>cmtSetPlayerDuelist = 28;</code>
     */
    public static final int cmtSetPlayerDuelist_VALUE = 28;
    /**
     * <pre>
     * у игрока нету денег для участия в игре
     * </pre>
     *
     * <code>cmtNoMoney = 29;</code>
     */
    public static final int cmtNoMoney_VALUE = 29;
    /**
     * <pre>
     * информация об игроке
     * </pre>
     *
     * <code>cmtGetPlayerInfo = 30;</code>
     */
    public static final int cmtGetPlayerInfo_VALUE = 30;
    /**
     * <pre>
     * просмотр рекламы и награждение
     * </pre>
     *
     * <code>cmtWatchAd = 31;</code>
     */
    public static final int cmtWatchAd_VALUE = 31;
    /**
     * <pre>
     * профиль игрока
     * </pre>
     *
     * <code>cmtGetPlayerProfile = 32;</code>
     */
    public static final int cmtGetPlayerProfile_VALUE = 32;
    /**
     * <pre>
     * обновить профиль игрока
     * </pre>
     *
     * <code>cmtUpdatePlayerProfile = 33;</code>
     */
    public static final int cmtUpdatePlayerProfile_VALUE = 33;
    /**
     * <pre>
     * регистрация игрока
     * </pre>
     *
     * <code>cmtRegister = 34;</code>
     */
    public static final int cmtRegister_VALUE = 34;
    /**
     * <pre>
     * игрок забыл пароль
     * </pre>
     *
     * <code>cmtForgotPassword = 35;</code>
     */
    public static final int cmtForgotPassword_VALUE = 35;
    /**
     * <code>cmtPing = 100;</code>
     */
    public static final int cmtPing_VALUE = 100;
    /**
     * <pre>
     * пинги
     * </pre>
     *
     * <code>cmtPong = 101;</code>
     */
    public static final int cmtPong_VALUE = 101;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static eProtoMessageType valueOf(int value) {
      return forNumber(value);
    }

    public static eProtoMessageType forNumber(int value) {
      switch (value) {
        case 0: return cmtNone;
        case 1: return cmtCheckAPIVersion;
        case 2: return cmtAuth;
        case 3: return cmtNeedAuth;
        case 4: return cmtUpdateSettings;
        case 5: return cmtUpdateAvatar;
        case 6: return cmtGetRoomList;
        case 7: return cmtRoomPlayerInit;
        case 8: return cmtGetRoomPlayers;
        case 9: return cmtRoomResults;
        case 10: return cmtSetPistolBullets;
        case 11: return cmtSetPlayerTypeAndPosition;
        case 12: return cmtRoomPlayerExit;
        case 13: return cmtRotateDrum;
        case 14: return cmtBang;
        case 15: return cmtTimeToStart;
        case 16: return cmtTimeToEnd;
        case 17: return cmtTimeToPutBullets;
        case 18: return cmtTimeToRotateDrum;
        case 19: return cmtTimeToShoot;
        case 20: return cmtRoomExit;
        case 21: return cmtGetShopItems;
        case 22: return cmtUsePlayerInventoryItem;
        case 23: return cmtGetRoomInfo;
        case 24: return cmtGetMoney;
        case 25: return cmtBuyShopItem;
        case 26: return cmtPlayerBet;
        case 27: return cmtGetRoomPlayersDuelist;
        case 28: return cmtSetPlayerDuelist;
        case 29: return cmtNoMoney;
        case 30: return cmtGetPlayerInfo;
        case 31: return cmtWatchAd;
        case 32: return cmtGetPlayerProfile;
        case 33: return cmtUpdatePlayerProfile;
        case 34: return cmtRegister;
        case 35: return cmtForgotPassword;
        case 100: return cmtPing;
        case 101: return cmtPong;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eProtoMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        eProtoMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eProtoMessageType>() {
            public eProtoMessageType findValueByNumber(int number) {
              return eProtoMessageType.forNumber(number);
            }
          };

    private final int value;

    private eProtoMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:eProtoMessageType)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
